<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FubarDev.WebDavServer</name>
    </assembly>
    <members>
        <member name="T:FubarDev.WebDavServer.AsyncLazy`1">
            <summary>
            Provides support for asynchronous lazy initialization. This type is fully threadsafe.
            </summary>
            <typeparam name="T">The type of object that is being asynchronously initialized.</typeparam>
        </member>
        <member name="F:FubarDev.WebDavServer.AsyncLazy`1._mutex">
            <summary>
            The synchronization object protecting <c>_instance</c>.
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.AsyncLazy`1._instance">
            <summary>
            The underlying lazy task.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.AsyncLazy`1"/> class.
            </summary>
            <param name="factory">The asynchronous delegate that is invoked to produce the value when it is needed. May not be <c>null</c>.</param>
        </member>
        <member name="T:FubarDev.WebDavServer.AsyncLazy`1.LazyState">
            <summary>
            The current status of the <see cref="P:FubarDev.WebDavServer.AsyncLazy`1.Task"/> of this <see cref="T:FubarDev.WebDavServer.AsyncLazy`1"/>
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.AsyncLazy`1.LazyState.NotStarted">
            <summary>
            The underlying task wasn't started yet
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.AsyncLazy`1.LazyState.Executing">
            <summary>
            The underlying task is still executing
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.AsyncLazy`1.LazyState.Completed">
            <summary>
            The underlying task is finished
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.AsyncLazy`1.Task">
            <summary>
            Gets the resulting task.
            </summary>
            <remarks>
            Starts the asynchronous factory method, if it has not already started.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.AsyncLazy`1.GetAwaiter">
            <summary>
            Asynchronous infrastructure support. This method permits instances of <see cref="T:FubarDev.WebDavServer.AsyncLazy`1"/> to be await'ed.
            </summary>
            <returns>the task awaiter</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.AsyncLazy`1.ConfigureAwait(System.Boolean)">
            <summary>
            Asynchronous infrastructure support. This method permits instances of <see cref="T:FubarDev.WebDavServer.AsyncLazy`1"/> to be await'ed.
            </summary>
            <param name="continueOnCapturedContext">Continue on captured context?</param>
            <returns>The configured task awaiter</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.CollectionActionResultExtensions">
            <summary>
            Extension methods for the <see cref="T:FubarDev.WebDavServer.Engines.CollectionActionResult"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.CollectionActionResultExtensions.Evaluate(FubarDev.WebDavServer.Engines.CollectionActionResult,FubarDev.WebDavServer.IWebDavContext)">
            <summary>
            Evaluate the result of a <see cref="T:FubarDev.WebDavServer.Engines.CollectionActionResult"/> and return a <see cref="T:FubarDev.WebDavServer.IWebDavResult"/> implementation object.
            </summary>
            <param name="collectionResult">The <see cref="T:FubarDev.WebDavServer.Engines.CollectionActionResult"/> to evaluate</param>
            <param name="context">The <see cref="T:FubarDev.WebDavServer.IWebDavContext"/> to create the response for</param>
            <returns>The created response</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Dispatchers.IWebDavClass">
            <summary>
            Base interface for all WebDAV class implementations.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.IWebDavClass.HttpMethods">
            <summary>
            Gets the HTTP methods supported by this WebDAV class.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.IWebDavClass.WebDavContext">
            <summary>
            Gets the context for a request
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.IWebDavClass.OptionsResponseHeaders">
            <summary>
            Gets the headers to be sent for a response of an <c>OPTIONS</c> request
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.IWebDavClass.DefaultResponseHeaders">
            <summary>
            Gets the headers to be sent for any response
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass.GetProperties(FubarDev.WebDavServer.FileSystem.IEntry)">
            <summary>
            Gets the properties for an entry that are supported by this WebDAV class
            </summary>
            <param name="entry">The entry to create the properties for</param>
            <returns>The properties that are to be used for the given <paramref name="entry"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass.TryCreateDeadProperty(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,FubarDev.WebDavServer.Props.Dead.IDeadProperty@)">
            <summary>
            Tries to create a well known dead property required/used by this WebDAV class implementation
            </summary>
            <param name="store">The property store to store this property</param>
            <param name="entry">The entry to instantiate this property for</param>
            <param name="name">The name of the dead property to create</param>
            <param name="deadProperty">The created dead property if this function returned <see langword="true"/>.</param>
            <returns><see langword="true"/> when this function could handle the creation of the well known dead property with the given <paramref name="name"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Dispatchers.IWebDavClass1">
            <summary>
            Interface for WebDAV class 1 support
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.OptionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Queries the options for a given path.
            </summary>
            <remarks>
            This is used to identify the WebDAV capabilities at a given URL.
            </remarks>
            <param name="path">The root-relataive file system path to query the options for</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the element at the given path
            </summary>
            <param name="path">The path to the element to get</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.HeadAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the information about an element at the given path
            </summary>
            <param name="path">The path to the element to get the information for</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.PutAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a document at the given <paramref name="path"/>
            </summary>
            <param name="path">The path where to create or update the document</param>
            <param name="data">The data to write to the new or existing document</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the element at the given path
            </summary>
            <param name="path">The path to the element to delete</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.PropFindAsync(System.String,FubarDev.WebDavServer.Model.propfind,System.Threading.CancellationToken)">
            <summary>
            Queries properties (dead or live) for a given <paramref name="path"/>.
            </summary>
            <param name="path">The path to query the properties for</param>
            <param name="request">Some information about the properties to query</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.PropPatchAsync(System.String,FubarDev.WebDavServer.Model.propertyupdate,System.Threading.CancellationToken)">
            <summary>
            Patches (sets or removes) properties from the given <paramref name="path"/>
            </summary>
            <param name="path">The path to patch the properties for</param>
            <param name="request">The properties to patch</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.MkColAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a collection at the given path
            </summary>
            <param name="path">The path to the collection to create</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.CopyAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Copies from the source to the destination
            </summary>
            <param name="path">The source to copy</param>
            <param name="destination">The destination to copy to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass1.MoveAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Moves from the source to the destination
            </summary>
            <param name="path">The source to move</param>
            <param name="destination">The destination to move to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Dispatchers.IWebDavClass2">
            <summary>
            Interface for WebDAV class 2 support
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass2.LockAsync(System.String,FubarDev.WebDavServer.Model.lockinfo,System.Threading.CancellationToken)">
            <summary>
            Creates a lock for the given <paramref name="path"/> using the information in <paramref name="info"/>.
            </summary>
            <param name="path">The path to create the lock for</param>
            <param name="info">The additional information used to create the lock</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass2.RefreshLockAsync(System.String,FubarDev.WebDavServer.Model.Headers.IfHeader,FubarDev.WebDavServer.Model.Headers.TimeoutHeader,System.Threading.CancellationToken)">
            <summary>
            Refreshes a lock for the given <paramref name="path"/> using the lock identified by the <paramref name="ifHeader"/>.
            </summary>
            <param name="path">The path to create the lock for</param>
            <param name="ifHeader">The <c>If</c> header used to identify the lock</param>
            <param name="timeoutHeader">The new timeout values</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>        [NotNull]
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.IWebDavClass2.UnlockAsync(System.String,FubarDev.WebDavServer.Model.Headers.LockTokenHeader,System.Threading.CancellationToken)">
            <summary>
            Removes a LOCK with the given <paramref name="stateToken"/> from the given <paramref name="path"/>
            </summary>
            <param name="path">The path to remove the lock for</param>
            <param name="stateToken">The state token of the lock to remove</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1">
            <summary>
            The default WebDAV class 1 implementation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.#ctor(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Handlers.IClass1Handler},FubarDev.WebDavServer.IWebDavContext,FubarDev.WebDavServer.Props.Dead.IDeadPropertyFactory,FubarDev.WebDavServer.IMimeTypeDetector,Microsoft.Extensions.Options.IOptions{FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1Options})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1"/> class.
            </summary>
            <param name="class1Handlers">The WebDAV class 1 handlers</param>
            <param name="context">The WebDAV context</param>
            <param name="deadPropertyFactory">The factory to create dead properties</param>
            <param name="mimeTypeDetector">The mime type detector for the getmimetype property</param>
            <param name="options">The options for the WebDAV class 1 implementation</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.HttpMethods">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.WebDavContext">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.OptionsResponseHeaders">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.DefaultResponseHeaders">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.HeadAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.PutAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.OptionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.PropFindAsync(System.String,FubarDev.WebDavServer.Model.propfind,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.PropPatchAsync(System.String,FubarDev.WebDavServer.Model.propertyupdate,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.MkColAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.CopyAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.MoveAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.GetProperties(FubarDev.WebDavServer.FileSystem.IEntry)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1.TryCreateDeadProperty(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,FubarDev.WebDavServer.Props.Dead.IDeadProperty@)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1Options">
            <summary>
            The options for the <see cref="T:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass1Options.HideExtensionForDisplayName">
            <summary>
            Gets or sets a value indicating whether the extension should be hidden from the default display name.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2">
            <summary>
            The default WebDAV class 2 implementation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.#ctor(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Handlers.IClass2Handler},FubarDev.WebDavServer.IWebDavContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2"/> class.
            </summary>
            <param name="handlers">The WebDAV class 2 handlers</param>
            <param name="context">The WebDAV context</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.HttpMethods">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.WebDavContext">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.OptionsResponseHeaders">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.DefaultResponseHeaders">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.LockAsync(System.String,FubarDev.WebDavServer.Model.lockinfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.RefreshLockAsync(System.String,FubarDev.WebDavServer.Model.Headers.IfHeader,FubarDev.WebDavServer.Model.Headers.TimeoutHeader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.UnlockAsync(System.String,FubarDev.WebDavServer.Model.Headers.LockTokenHeader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.GetProperties(FubarDev.WebDavServer.FileSystem.IEntry)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Dispatchers.WebDavDispatcherClass2.TryCreateDeadProperty(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,FubarDev.WebDavServer.Props.Dead.IDeadProperty@)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.ActionResult">
            <summary>
            The result of an action
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.ActionResult.#ctor(FubarDev.WebDavServer.Engines.ActionStatus,FubarDev.WebDavServer.Engines.ITarget)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.ActionResult"/> class.
            </summary>
            <param name="status">The status of the action</param>
            <param name="target">The element this status is for</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ActionResult.Status">
            <summary>
            Gets the status of the action
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ActionResult.Target">
            <summary>
            Gets the target entry this action status is for
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ActionResult.Href">
            <summary>
            Gets or sets the destination URL for the <see cref="P:FubarDev.WebDavServer.Engines.ActionResult.Target"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ActionResult.Exception">
            <summary>
            Gets or sets the exception that occurred during the execution of the action
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ActionResult.FailedProperties">
            <summary>
            Gets or sets the names of properties that couldn't be set.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ActionResult.IsFailure">
            <summary>
            Gets a value indicating whether the action failed
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.ActionStatus">
            <summary>
            The status of an action
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.Created">
            <summary>
            The target entry was created
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.Overwritten">
            <summary>
            The target entry was overwritten
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.CannotOverwrite">
            <summary>
            The target entry couldn't be overwritten, because a precondition failed.
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.CreateFailed">
            <summary>
            Creating the target entry failed
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.CleanupFailed">
            <summary>
            The cleanup failed after a collection was processed
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.PropSetFailed">
            <summary>
            Setting the property/properties failed
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.ParentFailed">
            <summary>
            An operation on a parent entry failed
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.TargetDeleteFailed">
            <summary>
            Deleting the target element failed
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.OverwriteFailed">
            <summary>
            Overwrite operation failed
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Engines.ActionStatus.Ignored">
            <summary>
            The entry was ignored
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.CollectionActionResult">
            <summary>
            The result of an operation on a collection
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.CollectionActionResult.#ctor(FubarDev.WebDavServer.Engines.ActionStatus,FubarDev.WebDavServer.Engines.ITarget)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.CollectionActionResult"/> class.
            </summary>
            <param name="status">The status of the operation</param>
            <param name="target">The target of the operation</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.CollectionActionResult.DocumentActionResults">
            <summary>
            Gets or sets the action results of the documents of this collection
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.CollectionActionResult.CollectionActionResults">
            <summary>
            Gets or sets the action results of the sub-collections of this collection
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.CollectionActionResult.Flatten">
            <summary>
            Returns a flat list of action results
            </summary>
            <remarks>
            This returns all action results for all sub-collections, documents and their child elements.
            </remarks>
            <returns>The flat list of action results</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.ICollectionTarget`3">
            <summary>
            Interface for a target that's a collection
            </summary>
            <typeparam name="TCollection">The interface type for a collection target</typeparam>
            <typeparam name="TDocument">The interface type for a document target</typeparam>
            <typeparam name="TMissing">The interface type for a missing target</typeparam>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ICollectionTarget`3.Created">
            <summary>
            Gets a value indicating whether the collection was created by the <see cref="T:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.ICollectionTarget`3.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Delete the collection target
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The collection that's now a missing target (because it was deleted by this function)</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.ICollectionTarget`3.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a child target
            </summary>
            <param name="name">The name of the child element</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The target which might be missing or a collection or document</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.ICollectionTarget`3.NewMissing(System.String)">
            <summary>
            Creates a missing child element with the given <paramref name="name"/>
            </summary>
            <param name="name">The name of the new child element</param>
            <returns>The missing target</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.IDocumentTarget`3">
            <summary>
            Interface for a target that's a document
            </summary>
            <typeparam name="TCollection">The interface type for a collection target</typeparam>
            <typeparam name="TDocument">The interface type for a document target</typeparam>
            <typeparam name="TMissing">The interface type for a missing target</typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.IDocumentTarget`3.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Delete the document target
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The document that's now a missing target (because it was deleted by this function)</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.IExistingTarget">
            <summary>
            The interface for an existing target
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.IExistingTarget.SetPropertiesAsync(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of an existing target
            </summary>
            <param name="properties">The source properties</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The list of property names that couldn't be set</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.IMissingTarget`3">
            <summary>
            Interface for a target that's missing
            </summary>
            <typeparam name="TCollection">The interface type for a collection target</typeparam>
            <typeparam name="TDocument">The interface type for a document target</typeparam>
            <typeparam name="TMissing">The interface type for a missing target</typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.IMissingTarget`3.CreateCollectionAsync(System.Threading.CancellationToken)">
            <summary>
            Creates a collection with the same name of this target
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The created collection target</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.ITarget">
            <summary>
            The target for a copy or move operation
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ITarget.Name">
            <summary>
            Gets the name of the target
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ITarget.DestinationUrl">
            <summary>
            Gets the destination URL of the target
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.ITargetActions`3">
            <summary>
            The interface for target actions
            </summary>
            <typeparam name="TCollection">The interface type for a collection target</typeparam>
            <typeparam name="TDocument">The interface type for a document target</typeparam>
            <typeparam name="TMissing">The interface type for a missing target</typeparam>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ITargetActions`3.Dispatcher">
            <summary>
            Gets the WebDAV dispatcher
            </summary>
            <remarks>
            This is required to get all the predefined (and live) properties.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.ITargetActions`3.ExistingTargetBehaviour">
            <summary>
            Gets the behaviour of this implementation when a target already exists
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.ITargetActions`3.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,`2,System.Threading.CancellationToken)">
            <summary>
            Copies or moves a document to a target that doesn't exist
            </summary>
            <param name="source">The source document</param>
            <param name="destination">The target where the document should be copied or moved to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The created document target</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.ITargetActions`3.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,`1,System.Threading.CancellationToken)">
            <summary>
            Copies or moves a document to an existing target
            </summary>
            <remarks>
            The <paramref name="source"/> can only be copied to the <paramref name="destination"/> when
            overwriting it is allowed.
            </remarks>
            <param name="source">The source document</param>
            <param name="destination">The destination document to overwrite</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result information about this action</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.ITargetActions`3.ExecuteAsync(FubarDev.WebDavServer.FileSystem.ICollection,`0,System.Threading.CancellationToken)">
            <summary>
            Do some cleanup after all child elements of the <paramref name="source"/> are processed (copied or moved)
            </summary>
            <remarks>
            In the case of a move operation, the source must be deleted by this implementation.
            </remarks>
            <param name="source">The source collection</param>
            <param name="destination">The destination collection</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The task for async execution</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.CollectionTarget">
            <summary>
            The local file system collection target
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CollectionTarget.#ctor(System.Uri,FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.FileSystem.ICollection,System.Boolean,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.CollectionTarget"/> class.
            </summary>
            <param name="destinationUrl">The destination URL for this collection</param>
            <param name="parent">The parent collection</param>
            <param name="collection">The underlying collection</param>
            <param name="created">Was this collection created by the <see cref="T:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3"/></param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.CollectionTarget.Collection">
            <summary>
            Gets the underlying collection
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.CollectionTarget.Created">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CollectionTarget.NewInstance(System.Uri,FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Creates a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.CollectionTarget"/> class.
            </summary>
            <param name="destinationUrl">The destination URL for this collection</param>
            <param name="collection">The underlying collection</param>
            <param name="targetActions">The target actions implementation to use</param>
            <returns>The created collection target object</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CollectionTarget.DeleteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CollectionTarget.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CollectionTarget.NewMissing(System.String)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.CopyBetweenFileSystemsTargetAction">
            <summary>
            The <see cref="T:FubarDev.WebDavServer.Engines.ITargetActions`3"/> implementation that copies between two file systems
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CopyBetweenFileSystemsTargetAction.#ctor(FubarDev.WebDavServer.IWebDavDispatcher)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.CopyBetweenFileSystemsTargetAction"/> class.
            </summary>
            <param name="dispatcher">The WebDAV dispatcher</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.CopyBetweenFileSystemsTargetAction.Dispatcher">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.CopyBetweenFileSystemsTargetAction.ExistingTargetBehaviour">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CopyBetweenFileSystemsTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Local.MissingTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CopyBetweenFileSystemsTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Local.DocumentTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CopyBetweenFileSystemsTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.Local.CollectionTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.CopyInFileSystemTargetAction">
            <summary>
            The <see cref="T:FubarDev.WebDavServer.Engines.ITargetActions`3"/> implementation that copies only entries within the same file system
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CopyInFileSystemTargetAction.#ctor(FubarDev.WebDavServer.IWebDavDispatcher)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.CopyInFileSystemTargetAction"/> class.
            </summary>
            <param name="dispatcher">The WebDAV dispatcher</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.CopyInFileSystemTargetAction.Dispatcher">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.CopyInFileSystemTargetAction.ExistingTargetBehaviour">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CopyInFileSystemTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Local.MissingTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CopyInFileSystemTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Local.DocumentTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.CopyInFileSystemTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.Local.CollectionTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.DocumentTarget">
            <summary>
            The local file system document target
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.DocumentTarget.#ctor(FubarDev.WebDavServer.Engines.Local.CollectionTarget,System.Uri,FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.DocumentTarget"/> class.
            </summary>
            <param name="parent">The parent collection</param>
            <param name="destinationUrl">The destination URL for this collection</param>
            <param name="document">The underlying document</param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.DocumentTarget.Document">
            <summary>
            Gets the underlying document
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.DocumentTarget.NewInstance(System.Uri,FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Creates a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.DocumentTarget"/> class.
            </summary>
            <param name="destinationUrl">The destination URL for this document</param>
            <param name="document">The underlying document</param>
            <param name="targetActions">The target actions implementation to use</param>
            <returns>The created document target object</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.DocumentTarget.DeleteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.EntryTarget">
            <summary>
            The base class of all existing targets
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.EntryTarget.#ctor(FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget},FubarDev.WebDavServer.Engines.Local.CollectionTarget,System.Uri,FubarDev.WebDavServer.FileSystem.IEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.EntryTarget"/> class.
            </summary>
            <param name="targetActions">The target actions implementation to use</param>
            <param name="parent">The parent collection</param>
            <param name="destinationUrl">The destination URL for this entry</param>
            <param name="entry">The underlying entry</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.EntryTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.EntryTarget.Parent">
            <summary>
            Gets the parent collection target
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.EntryTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.EntryTarget.TargetActions">
            <summary>
            Gets the target actions implementation to use
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.EntryTarget.SetPropertiesAsync(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget">
            <summary>
            The local file system implementation of the <see cref="T:FubarDev.WebDavServer.Engines.ITarget"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.#ctor(System.Uri,FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget"/> class.
            </summary>
            <param name="destinationUrl">The destination URL for this entry</param>
            <param name="document">The underlying document</param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.#ctor(System.Uri,FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget"/> class.
            </summary>
            <param name="destinationUrl">The destination URL for this entry</param>
            <param name="collection">The underlying collection</param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.#ctor(System.Uri,FubarDev.WebDavServer.FileSystem.ICollection,System.String,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget"/> class.
            </summary>
            <param name="destinationUrl">The destination URL for this entry</param>
            <param name="collection">The parent collection</param>
            <param name="name">The name of the missing target</param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.Parent">
            <summary>
            Gets the parent collection
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.Document">
            <summary>
            Gets the underlying document
            </summary>
            <remarks>
            Might be <see langword="null"/>, when the target is a collection instead.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.Collection">
            <summary>
            Gets the underlying collection
            </summary>
            <remarks>
            Might be <see langword="null"/>, when the target is a document instead.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.FromSelectionResult(FubarDev.WebDavServer.FileSystem.SelectionResult,System.Uri,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Creates a new <see cref="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget"/> from a <paramref name="selectionResult"/>
            </summary>
            <param name="selectionResult">The selection result to create this <see cref="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget"/> for</param>
            <param name="destinationUri">The destination URL for the element found by the <see cref="M:FubarDev.WebDavServer.FileSystem.IFileSystem.SelectAsync(System.String,System.Threading.CancellationToken)"/></param>
            <param name="targetActions">The target actions implementation to use</param>
            <returns>The new file system target</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.NewCollectionTarget">
            <summary>
            Creates a new collection target
            </summary>
            <remarks>
            This only works when this <see cref="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget"/> has an underlying collection.
            </remarks>
            <returns>The new collection target</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.NewDocumentTarget">
            <summary>
            Creates a new document target
            </summary>
            <remarks>
            This only works when this <see cref="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget"/> has an underlying collection.
            </remarks>
            <returns>The new document target</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.FileSystemTarget.NewMissingTarget">
            <summary>
            Creates a new missing target
            </summary>
            <remarks>
            This only works when this <see cref="T:FubarDev.WebDavServer.Engines.Local.FileSystemTarget"/> has an underlying collection.
            </remarks>
            <returns>The new missing target</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.MissingTarget">
            <summary>
            The missing local file system target
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MissingTarget.#ctor(System.Uri,System.String,FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.MissingTarget"/> class.
            </summary>
            <param name="destinationUrl">The destination URL for this entry</param>
            <param name="name">The name of the missing target</param>
            <param name="parent">The parent collection</param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MissingTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MissingTarget.Parent">
            <summary>
            Gets the parent collection
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MissingTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MissingTarget.NewInstance(System.Uri,FubarDev.WebDavServer.FileSystem.ICollection,System.String,FubarDev.WebDavServer.Engines.ITargetActions{FubarDev.WebDavServer.Engines.Local.CollectionTarget,FubarDev.WebDavServer.Engines.Local.DocumentTarget,FubarDev.WebDavServer.Engines.Local.MissingTarget})">
            <summary>
            Creates a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.MissingTarget"/> class.
            </summary>
            <param name="destinationUrl">The destination URL for this entry</param>
            <param name="parent">The parent collection</param>
            <param name="name">The name of the missing target</param>
            <param name="targetActions">The target actions implementation to use</param>
            <returns>The newly created missing target object</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MissingTarget.CreateCollectionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.MoveBetweenFileSystemsTargetAction">
            <summary>
            The <see cref="T:FubarDev.WebDavServer.Engines.ITargetActions`3"/> implementation that moves between two file systems
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MoveBetweenFileSystemsTargetAction.#ctor(FubarDev.WebDavServer.IWebDavDispatcher)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.MoveBetweenFileSystemsTargetAction"/> class.
            </summary>
            <param name="dispatcher">The WebDAV dispatcher</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MoveBetweenFileSystemsTargetAction.Dispatcher">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MoveBetweenFileSystemsTargetAction.ExistingTargetBehaviour">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MoveBetweenFileSystemsTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Local.MissingTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MoveBetweenFileSystemsTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Local.DocumentTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MoveBetweenFileSystemsTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.Local.CollectionTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Local.MoveInFileSystemTargetAction">
            <summary>
            The <see cref="T:FubarDev.WebDavServer.Engines.ITargetActions`3"/> implementation that moves only entries within the same file system
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MoveInFileSystemTargetAction.#ctor(FubarDev.WebDavServer.IWebDavDispatcher,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Local.MoveInFileSystemTargetAction"/> class.
            </summary>
            <param name="dispatcher">The WebDAV dispatcher</param>
            <param name="logger">The logger</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MoveInFileSystemTargetAction.Dispatcher">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Local.MoveInFileSystemTargetAction.ExistingTargetBehaviour">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MoveInFileSystemTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Local.MissingTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MoveInFileSystemTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Local.DocumentTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Local.MoveInFileSystemTargetAction.ExecuteAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.Local.CollectionTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3">
            <summary>
            The engine that operates recursively on its targets
            </summary>
            <typeparam name="TCollection">The interface type for a collection target</typeparam>
            <typeparam name="TDocument">The interface type for a document target</typeparam>
            <typeparam name="TMissing">The interface type for a missing target</typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3.#ctor(FubarDev.WebDavServer.Engines.ITargetActions{`0,`1,`2},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3"/> class.
            </summary>
            <param name="handler">The handler that performs the operation on the targets</param>
            <param name="allowOverwrite">Is overwriting the destination allowed?</param>
            <param name="logger">The logger</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3.ExecuteAsync(System.Uri,FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Model.Headers.DepthHeader,`2,System.Threading.CancellationToken)">
            <summary>
            Operates on a collection and the given missing target
            </summary>
            <param name="sourceUrl">The root-relative source URL</param>
            <param name="source">The source collection</param>
            <param name="depth">The recursion depth</param>
            <param name="target">The target of the operation</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result information of the current operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3.ExecuteAsync(System.Uri,FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Model.Headers.DepthHeader,`0,System.Threading.CancellationToken)">
            <summary>
            Operates on a collection and the given target collection
            </summary>
            <param name="sourceUrl">The root-relative source URL</param>
            <param name="source">The source collection</param>
            <param name="depth">The recursion depth</param>
            <param name="target">The target collection</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result information of the current operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3.ExecuteAsync(System.Uri,FubarDev.WebDavServer.FileSystem.IDocument,`2,System.Threading.CancellationToken)">
            <summary>
            Operates on a documentation and the given missing target
            </summary>
            <param name="sourceUrl">The root-relative source URL</param>
            <param name="source">The source documentation</param>
            <param name="target">The target of the operation</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result information of the current operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3.ExecuteAsync(System.Uri,FubarDev.WebDavServer.FileSystem.IDocument,`1,System.Threading.CancellationToken)">
            <summary>
            Operates on a documentation and the given document target
            </summary>
            <param name="sourceUrl">The root-relative source URL</param>
            <param name="source">The source documentation</param>
            <param name="target">The target document of the operation</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result information of the current operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.CopyRemoteHttpClientTargetActions">
            <summary>
            The <see cref="T:FubarDev.WebDavServer.Engines.ITargetActions`3"/> implementation that copies entries between servers
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.CopyRemoteHttpClientTargetActions.#ctor(FubarDev.WebDavServer.IWebDavDispatcher,System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.CopyRemoteHttpClientTargetActions"/> class.
            </summary>
            <param name="dispatcher">The WebDAV dispatcher</param>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> to use</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.CopyRemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.CopyRemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.CopyRemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.DefaultHttpMessageHandlerFactory">
            <summary>
            The implementation of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.IHttpMessageHandlerFactory"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.DefaultHttpMessageHandlerFactory.CreateAsync(System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.DefaultRemoteTargetActionsFactory">
            <summary>
            The factory class for remote target actions
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.DefaultRemoteTargetActionsFactory.#ctor(FubarDev.WebDavServer.IWebDavContext,FubarDev.WebDavServer.Engines.Remote.IHttpMessageHandlerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.DefaultRemoteTargetActionsFactory"/> class.
            </summary>
            <param name="context">The WebDAV request context</param>
            <param name="httpMessageHandlerFactory">The factory for <see cref="T:System.Net.Http.HttpClient"/> instances</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.DefaultRemoteTargetActionsFactory.CreateCopyTargetActionsAsync(System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.DefaultRemoteTargetActionsFactory.CreateMoveTargetActionsAsync(System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.IHttpMessageHandlerFactory">
            <summary>
            The interface for a factory to create <see cref="T:System.Net.Http.HttpMessageHandler"/> instances
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IHttpMessageHandlerFactory.CreateAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:System.Net.Http.HttpMessageHandler"/> for the given <paramref name="baseUrl"/>
            </summary>
            <param name="baseUrl">The base URL to create the <see cref="T:System.Net.Http.HttpMessageHandler"/> for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The newly created <see cref="T:System.Net.Http.HttpMessageHandler"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.IRemoteCopyTargetActions">
            <summary>
            The interface for remote COPY target actions
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.IRemoteCopyTargetActionsFactory">
            <summary>
            The interface for a factory to create remote copy target actions
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IRemoteCopyTargetActionsFactory.CreateCopyTargetActionsAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Creates a remote target action impleemtation
            </summary>
            <param name="destinationUrl">The destination URL</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The remote target action implementation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.IRemoteMoveTargetActions">
            <summary>
            The interface for remote MOVE target actions
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.IRemoteMoveTargetActionsFactory">
            <summary>
            The interface for a factory to create remote move target actions
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IRemoteMoveTargetActionsFactory.CreateMoveTargetActionsAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Creates a remote target action impleemtation
            </summary>
            <param name="destinationUrl">The destination URL</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The remote target action implementation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions">
            <summary>
            The interface defining the remote target actions
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions.SetPropertiesAsync(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <summary>
            Sets the properties on a remote target
            </summary>
            <param name="target">The remote collection target</param>
            <param name="properties">The properties to set on the <paramref name="target"/></param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The list of property names that couldn't be set</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions.SetPropertiesAsync(FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget,System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <summary>
            Sets the properties on a remote target
            </summary>
            <param name="target">The remote document target</param>
            <param name="properties">The properties to set on the <paramref name="target"/></param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The list of property names that couldn't be set</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions.CreateCollectionAsync(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a remote collection
            </summary>
            <param name="targetCollection">The parent collection target</param>
            <param name="name">The name of the new collection</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The newly created remote collection target</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions.GetAsync(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the child of a remote collection target
            </summary>
            <param name="collection">The remote collection target to get the child target for</param>
            <param name="name">The name of the child target</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The found child target (or remote missing target)</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions.DeleteAsync(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.Threading.CancellationToken)">
            <summary>
            Delete the remote collection target
            </summary>
            <param name="target">The remote collection target</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions.DeleteAsync(FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget,System.Threading.CancellationToken)">
            <summary>
            Delete the remote document target
            </summary>
            <param name="target">The remote document target</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.MoveRemoteHttpClientTargetActions">
            <summary>
            The <see cref="T:FubarDev.WebDavServer.Engines.ITargetActions`3"/> implementation that moves entries between servers
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.MoveRemoteHttpClientTargetActions.#ctor(FubarDev.WebDavServer.IWebDavDispatcher,System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.MoveRemoteHttpClientTargetActions"/> class.
            </summary>
            <param name="dispatcher">The WebDAV dispatcher</param>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> to use</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.MoveRemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.MoveRemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.MoveRemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget">
            <summary>
            The remote server collection target
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget.#ctor(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.String,System.Uri,System.Boolean,FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget"/> class.
            </summary>
            <param name="parent">The parent collection</param>
            <param name="name">The name of the remote collection</param>
            <param name="destinationUrl">The destination URL</param>
            <param name="created">Was the collection created by the <see cref="T:FubarDev.WebDavServer.Engines.RecursiveExecutionEngine`3"/></param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget.Created">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget.SetPropertiesAsync(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget.DeleteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget.NewMissing(System.String)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget">
            <summary>
            The remote server document target
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget.#ctor(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.String,System.Uri,FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget"/> class.
            </summary>
            <param name="parent">The parent collection</param>
            <param name="name">The name of the remote document</param>
            <param name="destinationUrl">The destination URL</param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget.Parent">
            <summary>
            Gets the parent remote collection
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget.SetPropertiesAsync(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget.DeleteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions">
            <summary>
            Base class for remote target actions
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.#ctor(FubarDev.WebDavServer.IWebDavDispatcher,System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions"/> class.
            </summary>
            <param name="dispatcher">The WebDAV dispatcher</param>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> to use for the communication with the remote server</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.Dispatcher">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.ExistingTargetBehaviour">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.Client">
            <summary>
            Gets the <see cref="T:System.Net.Http.HttpClient"/> to communicate with the remote server
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.ExecuteAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.SetPropertiesAsync(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.SetPropertiesAsync(FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget,System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedWriteableProperty},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.CreateCollectionAsync(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.GetAsync(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.DeleteAsync(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.DeleteAsync(FubarDev.WebDavServer.Engines.Remote.RemoteDocumentTarget,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.Dispose">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.CreateException(System.Uri,FubarDev.WebDavServer.Model.error)">
            <summary>
            Creates an exception for a failed remote operation
            </summary>
            <param name="requestUrl">The request URL</param>
            <param name="error">The error object</param>
            <returns>The new remote target exception</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.Parse(System.Uri,System.Net.Http.HttpResponseMessage,System.Xml.Linq.XDocument)">
            <summary>
            Parse the response for a request
            </summary>
            <param name="requrestUrl">The request URL</param>
            <param name="responseMessage">The response message</param>
            <param name="document">The response document</param>
            <returns>The multistatus created from the <paramref name="document"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteHttpClientTargetActions.ReadResponseAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Read the response from the <paramref name="responseMessage"/>
            </summary>
            <param name="responseMessage">The response to read the <see cref="T:System.Xml.Linq.XDocument"/> from</param>
            <returns>The <see cref="T:System.Xml.Linq.XDocument"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget">
            <summary>
            The missing remote target
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget.#ctor(FubarDev.WebDavServer.Engines.Remote.RemoteCollectionTarget,System.Uri,System.String,FubarDev.WebDavServer.Engines.Remote.IRemoteTargetActions)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget"/> class.
            </summary>
            <param name="parent">The parent collection</param>
            <param name="destinationUrl">The destination URL</param>
            <param name="name">The name of the missing remote targe</param>
            <param name="targetActions">The target actions implementation to use</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget.DestinationUrl">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget.Parent">
            <summary>
            Gets the parent remote collection
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteMissingTarget.CreateCollectionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException">
            <summary>
            The exception for a failed remote operation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException"/> class.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException"/> class.
            </summary>
            <param name="message">The error message</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException"/> class.
            </summary>
            <param name="message">The error message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.#ctor(System.Collections.Generic.IReadOnlyCollection{System.Uri})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException"/> class.
            </summary>
            <param name="href">The <c>href</c> of the failed operation</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.#ctor(System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException"/> class.
            </summary>
            <param name="href">The <c>href</c>s of the failed operation</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.#ctor(System.String,System.Collections.Generic.IReadOnlyCollection{System.Uri})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException"/> class.
            </summary>
            <param name="message">The error message</param>
            <param name="href">The <c>href</c>s of the failed operation</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.#ctor(System.String,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException"/> class.
            </summary>
            <param name="message">The error message</param>
            <param name="href">The <c>href</c>s of the failed operation</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.#ctor(System.String,System.Collections.Generic.IReadOnlyCollection{System.Uri},System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException"/> class.
            </summary>
            <param name="message">The error message</param>
            <param name="href">The <c>href</c>s of the failed operation</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Engines.Remote.RemoteTargetException.Href">
            <summary>
            Gets the <c>href</c>s of the failed operation
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.CollectionActionResult">
            <summary>
            Information about the success for a collection action
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionActionResult.#ctor(FubarDev.WebDavServer.FileSystem.ICollection,System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.FileSystem.IEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.FileSystem.CollectionActionResult"/> class.
            </summary>
            <param name="target">The target to create the result information for</param>
            <param name="createdChildEntries">The created child entries</param>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionActionResult.#ctor(FubarDev.WebDavServer.FileSystem.ICollection,System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.FileSystem.IEntry},FubarDev.WebDavServer.FileSystem.IEntry,FubarDev.WebDavServer.Model.WebDavStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.FileSystem.CollectionActionResult"/> class.
            </summary>
            <param name="target">The target to create the result information for</param>
            <param name="createdChildEntries">The created child entries</param>
            <param name="failedEntry">The failed child entry</param>
            <param name="errorStatusCode">The status code for the failed child entry</param>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.CollectionActionResult.Target">
            <summary>
            Gets the target this result information object is for
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.CollectionActionResult.CreatedChildEntries">
            <summary>
            Gets the created child entries
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.CollectionActionResult.FailedEntry">
            <summary>
            Gets the failed entry
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.CollectionActionResult.ErrorStatusCode">
            <summary>
            Gets the status code for the failed entry
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.CollectionExtensions">
            <summary>
            Extension methods for the collections
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionExtensions.GetMountTargetAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.FileSystem.Mount.IMountPointProvider)">
            <summary>
            Returns the target if the collection is a mount point or the collection itself
            </summary>
            <param name="collection">The collection to found the mount destination for</param>
            <param name="mountPointProvider">The mount point provider</param>
            <returns>The <paramref name="collection"/> or the destination collection if a mount point existed</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionExtensions.GetMountTargetEntryAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.FileSystem.Mount.IMountPointProvider)">
            <summary>
            Returns the target if the collection is a mount point or the collection itself
            </summary>
            <param name="collection">The collection to found the mount destination for</param>
            <param name="mountPointProvider">The mount point provider</param>
            <returns>The <paramref name="collection"/> or the destination collection if a mount point existed</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionExtensions.EnumerateEntries(FubarDev.WebDavServer.FileSystem.ICollection,System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.FileSystem.IEntry},System.Int32)">
            <summary>
            Gets all entries of a collection recursively
            </summary>
            <param name="collection">The collection to get the entries from</param>
            <param name="children">Child items for the given <paramref name="collection"/></param>
            <param name="maxDepth">The maximum depth (0 = only entries of the <paramref name="collection"/>, but not of its sub collections)</param>
            <returns>An async enumerable to collect all the entries recursively</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionExtensions.EnumerateEntries(FubarDev.WebDavServer.FileSystem.ICollection,System.Int32)">
            <summary>
            Gets all entries of a collection recursively
            </summary>
            <param name="collection">The collection to get the entries from</param>
            <param name="maxDepth">The maximum depth (0 = only entries of the <paramref name="collection"/>, but not of its sub collections)</param>
            <returns>An async enumerable to collect all the entries recursively</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.CollectionExtensions.GetNodeAsync(FubarDev.WebDavServer.FileSystem.ICollection,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets the collection as node
            </summary>
            <param name="collection">The collection to get the node for</param>
            <param name="maxDepth">The maximum depth to be used to get the child nodes</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The collection node</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.DeleteResult">
            <summary>
            The result of a <c>DELETE</c> file system operation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.DeleteResult.#ctor(FubarDev.WebDavServer.Model.WebDavStatusCode,FubarDev.WebDavServer.FileSystem.IEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.FileSystem.DeleteResult"/> class.
            </summary>
            <param name="statusCode">The status code for the operation</param>
            <param name="failedEntry">The entry of the failed operation</param>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.DeleteResult.StatusCode">
            <summary>
            Gets the status code of the operation
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.DeleteResult.FailedEntry">
            <summary>
            Gets the failed entry
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.EntryExtensions">
            <summary>
            Extension methods for <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/> implementations
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.EntryExtensions.GetEntityTagAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> for the <paramref name="entry"/>
            </summary>
            <remarks>
            The return value might be null, when no property store was defined.
            </remarks>
            <param name="entry">The entry to get the <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The entity tag for the entry</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.EntryExtensions.GetProperties(FubarDev.WebDavServer.FileSystem.IEntry,FubarDev.WebDavServer.IWebDavDispatcher,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets all predefined properties for the given <paramref name="entry"/>, provided by the given <paramref name="dispatcher"/>.
            </summary>
            <param name="entry">The entry to get the properties for</param>
            <param name="dispatcher">The dispatcher that provides the predefined properties</param>
            <param name="maxCost">The maximum cost for querying a properties value</param>
            <param name="returnInvalidProperties">Do we want to get invalid live properties?</param>
            <returns>The async enumerable of all property (including the property store when the <paramref name="maxCost"/> allows it)</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.ICollection">
            <summary>
            Represents a WebDAV collection
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.ICollection.GetChildAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the child entry with the given <paramref name="name"/>
            </summary>
            <param name="name">The name of the child entry to get</param>
            <param name="ct">The cancellation token</param>
            <returns>The found entry (or <c>null</c>)</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.ICollection.GetChildrenAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all child entries
            </summary>
            <param name="ct">The cancellation token</param>
            <returns>The found entries</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.ICollection.CreateDocumentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a document with the given name
            </summary>
            <param name="name">The name of the new document</param>
            <param name="ct">The cancellation token</param>
            <returns>The created document</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.ICollection.CreateCollectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a child collection
            </summary>
            <param name="name">The name of the new collection</param>
            <param name="ct">The cancellation token</param>
            <returns>The new collection</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.ICollectionNode">
            <summary>
            A node representing all found children of a <see cref="T:FubarDev.WebDavServer.FileSystem.ICollection"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Collection">
            <summary>
            Gets the collection this node is for
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Name">
            <summary>
            Gets the name of the node (usually the same as <see cref="P:FubarDev.WebDavServer.FileSystem.IEntry.Name"/> of <see cref="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Collection"/>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Nodes">
            <summary>
            Gets the sub collection nodes
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ICollectionNode.Documents">
            <summary>
            Gets the documents of this collection node
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.IDocument">
            <summary>
            The document of a collection
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IDocument.Length">
            <summary>
            Gets the length of the document
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IDocument.OpenReadAsync(System.Threading.CancellationToken)">
            <summary>
            Opens the document for reading
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The stream used to read the document</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IDocument.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Overwrites the document
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The stream used to write to the document</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IDocument.CopyToAsync(FubarDev.WebDavServer.FileSystem.ICollection,System.String,System.Threading.CancellationToken)">
            <summary>
            Copies the document to a new location within the same file system
            </summary>
            <param name="collection">The destination collection</param>
            <param name="name">The new name of the document</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The created document</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IDocument.MoveToAsync(FubarDev.WebDavServer.FileSystem.ICollection,System.String,System.Threading.CancellationToken)">
            <summary>
            Moves the document to a new location within the same file system
            </summary>
            <param name="collection">The destination collection</param>
            <param name="name">The new name of the document</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The created document</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.IEntityTagEntry">
            <summary>
            Is implemented when a <see cref="T:FubarDev.WebDavServer.FileSystem.IDocument"/> or <see cref="T:FubarDev.WebDavServer.FileSystem.ICollection"/> allows native <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> support.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IEntityTagEntry.ETag">
            <summary>
            Gets the <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> for a <see cref="T:FubarDev.WebDavServer.FileSystem.IDocument"/> or <see cref="T:FubarDev.WebDavServer.FileSystem.ICollection"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IEntityTagEntry.UpdateETagAsync(System.Threading.CancellationToken)">
            <summary>
            Enforces the update of an <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/>
            </summary>
            <remarks>
            This is usually called when the <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/> properties were changed.
            </remarks>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.IEntry">
            <summary>
            An entry in the WebDAV file system
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IEntry.Name">
            <summary>
            Gets the name of the entry
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IEntry.FileSystem">
            <summary>
            Gets the file system of this entry
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IEntry.Parent">
            <summary>
            Gets the collection that contains this entry
            </summary>
            <remarks>
            This property can be <c>null</c> when this entry is the root collection.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IEntry.Path">
            <summary>
            Gets the path of the entry
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IEntry.LastWriteTimeUtc">
            <summary>
            Gets the last time this entry was modified
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IEntry.CreationTimeUtc">
            <summary>
            Gets the time this entry was created
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IEntry.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes this entry
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result of the delete operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IEntry.SetLastWriteTimeUtcAsync(System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Sets the last write time
            </summary>
            <param name="lastWriteTime">The new last write time</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IEntry.SetCreationTimeUtcAsync(System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Sets the creation time
            </summary>
            <param name="creationTime">The new creation time</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.IFileSystem">
            <summary>
            The file system
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IFileSystem.Root">
            <summary>
            Gets the root collection
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IFileSystem.SupportsRangedRead">
            <summary>
            Gets a value indicating whether the file system allows seeking and partial reading.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IFileSystem.PropertyStore">
            <summary>
            Gets the property store to be used for the file system.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.IFileSystem.LockManager">
            <summary>
            Gets the global lock manager
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IFileSystem.SelectAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Finds an entry for a given path
            </summary>
            <param name="path">The root-relative path</param>
            <param name="ct">The cancellation token</param>
            <returns>The result of the search operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.IFileSystemFactory">
            <summary>
            The file system factory
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IFileSystemFactory.CreateFileSystem(FubarDev.WebDavServer.FileSystem.ICollection,System.Security.Principal.IPrincipal)">
            <summary>
            Gets the <see cref="T:FubarDev.WebDavServer.FileSystem.IFileSystem"/> instance for the given <paramref name="principal"/>
            </summary>
            <param name="mountPoint">The mount point where this file system should be included</param>
            <param name="principal">The current principal to get the <see cref="T:FubarDev.WebDavServer.FileSystem.IFileSystem"/> instance for</param>
            <returns>The <see cref="T:FubarDev.WebDavServer.FileSystem.IFileSystem"/> instance for the <paramref name="principal"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.ILocalFileSystem">
            <summary>
            Interface for a file system that's accessible using a file system path
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ILocalFileSystem.RootDirectoryPath">
            <summary>
            Gets the path to the root directory
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.ILocalFileSystem.HasSubfolders">
            <summary>
            Gets a value indicating whether this file system uses sub folders.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.IPathTraversalEngine">
            <summary>
            Interface for an implementation to find an entry for a given path
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IPathTraversalEngine.TraverseAsync(FubarDev.WebDavServer.FileSystem.IFileSystem,System.String,System.Threading.CancellationToken)">
            <summary>
            Find the entry for a given path
            </summary>
            <param name="fileSystem">The root file system</param>
            <param name="path">The path to traverse</param>
            <param name="ct">The cancellation token</param>
            <returns>The result for the path search</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IPathTraversalEngine.TraverseAsync(FubarDev.WebDavServer.FileSystem.ICollection,System.String,System.Threading.CancellationToken)">
            <summary>
            Find the entry for a given path
            </summary>
            <param name="currentCollection">The root collection</param>
            <param name="path">The path to traverse</param>
            <param name="ct">The cancellation token</param>
            <returns>The result for the path search</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.IRecusiveChildrenCollector">
            <summary>
            A collection implementing this interface allows a more efficient collection of child entries
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.IRecusiveChildrenCollector.GetEntries(System.Int32)">
            <summary>
            Gets all child entries up to the depth of <paramref name="maxDepth"/>
            </summary>
            <param name="maxDepth">The maximum depth (<see cref="F:System.Int32.MaxValue"/> as infinity)</param>
            <returns>All found child entries</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.Mount.IMountPointManager">
            <summary>
            Manager for mount points
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.Mount.IMountPointManager.Mount(System.Uri,FubarDev.WebDavServer.FileSystem.IFileSystem)">
            <summary>
            Mount a <paramref name="source"/> to a <paramref name="destination"/>
            </summary>
            <param name="source">The source path</param>
            <param name="destination">The destination file system</param>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.Mount.IMountPointManager.Unmount(System.Uri)">
            <summary>
            Removes a mount from the <paramref name="source"/>
            </summary>
            <param name="source">The source path</param>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.Mount.IMountPointProvider">
            <summary>
            Base interface that allows querying the mount points
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.Mount.IMountPointProvider.MountPoints">
            <summary>
            Gets all mount points
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.Mount.IMountPointProvider.TryGetMountPoint(System.Uri,FubarDev.WebDavServer.FileSystem.IFileSystem@)">
            <summary>
            Try to get a mount point for a given path
            </summary>
            <param name="path">The path to get the destination file system for</param>
            <param name="destination">The destination file system</param>
            <returns><see langword="true"/> when there is a destination file system for a <paramref name="path"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.PathTraversalEngine">
            <summary>
            Helper class to find an entry for a given path
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.PathTraversalEngine.#ctor(Microsoft.Extensions.Logging.ILogger{FubarDev.WebDavServer.FileSystem.PathTraversalEngine})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.FileSystem.PathTraversalEngine"/> class.
            </summary>
            <param name="logger">The logger</param>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.PathTraversalEngine.TraverseAsync(FubarDev.WebDavServer.FileSystem.IFileSystem,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.PathTraversalEngine.TraverseAsync(FubarDev.WebDavServer.FileSystem.ICollection,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.SelectionResult">
            <summary>
            The result of a <see cref="M:FubarDev.WebDavServer.FileSystem.IFileSystem.SelectAsync(System.String,System.Threading.CancellationToken)"/> operation
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.SelectionResult.ResultType">
            <summary>
            Gets the type of the result
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.SelectionResult.IsMissing">
            <summary>
            Gets a value indicating whether there was a missing path part?
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.SelectionResult.Collection">
            <summary>
            Gets the collection of the search result.
            </summary>
            <remarks>
            When <see cref="P:FubarDev.WebDavServer.FileSystem.SelectionResult.ResultType"/> is <see cref="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.FoundCollection"/>, this is the found collection.
            When <see cref="P:FubarDev.WebDavServer.FileSystem.SelectionResult.ResultType"/> is <see cref="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.FoundDocument"/>, this is the parent collection.
            Otherwise, this is the last found collection.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.SelectionResult.Document">
            <summary>
            Gets the found document
            </summary>
            <remarks>
            This property is only valid when <see cref="P:FubarDev.WebDavServer.FileSystem.SelectionResult.ResultType"/> is <see cref="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.FoundDocument"/>.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.SelectionResult.MissingNames">
            <summary>
            Gets the collection of missing child elements
            </summary>
            <remarks>
            This is only valid, when <see cref="P:FubarDev.WebDavServer.FileSystem.SelectionResult.IsMissing"/> is <see langword="true"/>.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.SelectionResult.FullPath">
            <summary>
            Gets the full root-relative path of the element that was searched
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.SelectionResult.TargetEntry">
            <summary>
            Gets the found target entry
            </summary>
            <remarks>
            This is only valid when <see cref="P:FubarDev.WebDavServer.FileSystem.SelectionResult.IsMissing"/> is <see langword="false"/>.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.FileSystem.SelectionResult.TargetFileSystem">
            <summary>
            Gets the file system of the found element or the last found collection
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.SelectionResult.Create(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.FileSystem.IDocument)">
            <summary>
            Creates a selection result for a found document
            </summary>
            <param name="collection">The parent collection</param>
            <param name="document">The found document</param>
            <returns>The created selection result</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.SelectionResult.Create(FubarDev.WebDavServer.FileSystem.ICollection)">
            <summary>
            Creates a selection result for a found collection
            </summary>
            <param name="collection">The found collection</param>
            <returns>The created selection result</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.SelectionResult.CreateMissingDocumentOrCollection(FubarDev.WebDavServer.FileSystem.ICollection,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Creates a selection for a missing document or collection
            </summary>
            <param name="collection">The last found collection</param>
            <param name="pathEntries">The missing path elements</param>
            <returns>The created selection result</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.FileSystem.SelectionResult.CreateMissingCollection(FubarDev.WebDavServer.FileSystem.ICollection,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Creates a selection for a missing collection
            </summary>
            <param name="collection">The last found collection</param>
            <param name="pathEntries">The missing path elements</param>
            <returns>The created selection result</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.FileSystem.SelectionResultType">
            <summary>
            The status of a selection result
            </summary>
            <seealso cref="M:FubarDev.WebDavServer.FileSystem.IFileSystem.SelectAsync(System.String,System.Threading.CancellationToken)"/>
        </member>
        <member name="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.FoundCollection">
            <summary>
            A collection was found
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.FoundDocument">
            <summary>
            A document was found
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.MissingDocumentOrCollection">
            <summary>
            A document or collection was missing
            </summary>
            <remarks>
            This is different from <see cref="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.MissingCollection"/>, because the last missing part doesn't contain a <c>/</c>
            at the end and may therefore be a file or a collection.
            </remarks>
        </member>
        <member name="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.MissingCollection">
            <summary>
            A collection was missing
            </summary>
            <remarks>
            This is different from <see cref="F:FubarDev.WebDavServer.FileSystem.SelectionResultType.MissingDocumentOrCollection"/>, because the last missing part contains a <c>/</c>
            at the end and is therefore clearly a collection.
            </remarks>
        </member>
        <member name="T:FubarDev.WebDavServer.Formatters.IWebDavOutputFormatter">
            <summary>
            A formatter for WebDAV responses
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Formatters.IWebDavOutputFormatter.ContentType">
            <summary>
            Gets the content type
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Formatters.IWebDavOutputFormatter.Encoding">
            <summary>
            Gets the encoding
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Formatters.IWebDavOutputFormatter.Serialize``1(System.IO.Stream,``0)">
            <summary>
            Serializes the <paramref name="data"/> to the <paramref name="output"/>
            </summary>
            <typeparam name="T">The type of the <paramref name="data"/></typeparam>
            <param name="output">The stream to serialize to</param>
            <param name="data">The data to serialize</param>
        </member>
        <member name="T:FubarDev.WebDavServer.Formatters.WebDavFormatterOptions">
            <summary>
            Options for the WebDAV XML output formatter
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Formatters.WebDavFormatterOptions.ContentType">
            <summary>
            Gets or sets the content type to send
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Formatters.WebDavFormatterOptions.NamespacePrefix">
            <summary>
            Gets or sets the namespace prefix to use
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Formatters.WebDavXmlOutputFormatter">
            <summary>
            The default implementation of the <see cref="T:FubarDev.WebDavServer.Formatters.IWebDavOutputFormatter"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Formatters.WebDavXmlOutputFormatter.#ctor(Microsoft.Extensions.Options.IOptions{FubarDev.WebDavServer.Formatters.WebDavFormatterOptions},Microsoft.Extensions.Logging.ILogger{FubarDev.WebDavServer.Formatters.WebDavXmlOutputFormatter})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Formatters.WebDavXmlOutputFormatter"/> class.
            </summary>
            <param name="options">The formatter options</param>
            <param name="logger">The logger</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Formatters.WebDavXmlOutputFormatter.ContentType">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Formatters.WebDavXmlOutputFormatter.Encoding">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Formatters.WebDavXmlOutputFormatter.Serialize``1(System.IO.Stream,``0)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IClass1Handler">
            <summary>
            Interface for a WebDAV class 1 handler
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IClass2Handler">
            <summary>
            Interface for a WebDAV class 2 handler
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.ICopyHandler">
            <summary>
            Interface for the <c>COPY</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.ICopyHandler.CopyAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Copies from the source to the destination
            </summary>
            <param name="path">The source to copy</param>
            <param name="destination">The destination to copy to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IDeleteHandler">
            <summary>
            Interface for the <c>DELETE</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IDeleteHandler.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the element at the given path
            </summary>
            <param name="path">The path to the element to delete</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IGetHandler">
            <summary>
            Interface for the <c>GET</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IGetHandler.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the element at the given path
            </summary>
            <param name="path">The path to the element to get</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IHandler">
            <summary>
            The handler for a HTTP method for a given WebDAV class
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.IHandler.HttpMethods">
            <summary>
            Gets the HTTP methods that are processed by this handler
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IHeadHandler">
            <summary>
            Interface for the <c>HEAD</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IHeadHandler.HeadAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the information about an element at the given path
            </summary>
            <param name="path">The path to the element to get the information for</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.ILockHandler">
            <summary>
            Interface for the <c>LOCK</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.ILockHandler.LockAsync(System.String,FubarDev.WebDavServer.Model.lockinfo,System.Threading.CancellationToken)">
            <summary>
            Creates a lock for the given <paramref name="path"/> using the information in <paramref name="info"/>.
            </summary>
            <param name="path">The path to create the lock for</param>
            <param name="info">The additional information used to create the lock</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.ILockHandler.RefreshLockAsync(System.String,FubarDev.WebDavServer.Model.Headers.IfHeader,FubarDev.WebDavServer.Model.Headers.TimeoutHeader,System.Threading.CancellationToken)">
            <summary>
            Refreshes a lock for the given <paramref name="path"/> using the lock identified by the <paramref name="ifHeader"/>.
            </summary>
            <param name="path">The path to create the lock for</param>
            <param name="ifHeader">The <c>If</c> header used to identify the lock</param>
            <param name="timeoutHeader">The new timeout values</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IMkColHandler">
            <summary>
            Interface for the <c>MKCOL</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IMkColHandler.MkColAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a collection at the given path
            </summary>
            <param name="path">The path to the collection to create</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IMoveHandler">
            <summary>
            Interface for the <c>MOVE</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IMoveHandler.MoveAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Moves from the source to the destination
            </summary>
            <param name="path">The source to move</param>
            <param name="destination">The destination to move to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.CopyHandler">
            <summary>
            The implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.ICopyHandler"/> interface.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext,Microsoft.Extensions.Options.IOptions{FubarDev.WebDavServer.Handlers.Impl.CopyHandlerOptions},Microsoft.Extensions.Logging.ILogger{FubarDev.WebDavServer.Handlers.Impl.CopyHandler},System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.CopyHandler"/> class.
            </summary>
            <param name="rootFileSystem">The root file system</param>
            <param name="host">The WebDAV server context</param>
            <param name="options">The options for the <c>COPY</c> handler</param>
            <param name="logger">The logger for this handler</param>
            <param name="serviceProvider">The service provider used to lazily query the <see cref="T:FubarDev.WebDavServer.Engines.Remote.IRemoteCopyTargetActionsFactory"/> implementation</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.CopyHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyHandler.CopyAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyHandler.CreateRemoteTargetActionsAsync(System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyHandler.CreateLocalTargetActions(FubarDev.WebDavServer.RecursiveProcessingMode)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.CopyHandlerOptions">
            <summary>
            Options for the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.CopyHandler"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.CopyHandlerOptions.Mode">
            <summary>
            Gets or sets the mode that determines the method used to copy files
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.CopyHandlerOptions.OverwriteAsDefault">
            <summary>
            Gets or sets a value indicating whether the destination of a copy operation is overwriteable when
            the client doesn't specify the <see cref="T:FubarDev.WebDavServer.Model.Headers.OverwriteHeader"/>.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase">
            <summary>
            The shared implementation of the COPY and MOVE handlers.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase"/> class.
            </summary>
            <param name="rootFileSystem">The root file system</param>
            <param name="context">The WebDAV context</param>
            <param name="logger">The logger to use (either for COPY or MOVE)</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase.WebDavContext">
            <summary>
            Gets the WebDAV context
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase.Logger">
            <summary>
            Gets the logger
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase.ExecuteAsync(System.String,System.Uri,FubarDev.WebDavServer.Model.Headers.DepthHeader,System.Boolean,FubarDev.WebDavServer.RecursiveProcessingMode,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Executes the COPY or MOVE recursively
            </summary>
            <param name="sourcePath">The source path</param>
            <param name="destination">The destination URI</param>
            <param name="depth">The depth</param>
            <param name="overwrite">Can the destination be overwritten?</param>
            <param name="mode">The COPY mode to use</param>
            <param name="isMove">Is this a move operation?</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase.CreateRemoteTargetActionsAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Create the target action implementation for remote COPY or MOVE
            </summary>
            <param name="destinationUrl">The destination URL</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The implementation for remote actions</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase.CreateLocalTargetActions(FubarDev.WebDavServer.RecursiveProcessingMode)">
            <summary>
            Create the target action implementation for local COPY or MOVE
            </summary>
            <param name="mode">The requested processing mode (in-filesystem or cross-filesystem)</param>
            <returns>The implementation for local actions</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.CopyMoveHandlerBase.ExecuteAsync``3(FubarDev.WebDavServer.Engines.RecursiveExecutionEngine{``0,``1,``2},System.Uri,FubarDev.WebDavServer.FileSystem.SelectionResult,``0,FubarDev.WebDavServer.Engines.ITarget,FubarDev.WebDavServer.Model.Headers.DepthHeader,System.Threading.CancellationToken)">
            <summary>
            Executes the COPY or MOVE recursively
            </summary>
            <typeparam name="TCollection">The collection type</typeparam>
            <typeparam name="TDocument">The document type</typeparam>
            <typeparam name="TMissing">The type for a missing entry</typeparam>
            <param name="engine">The engine to use to perform the operation</param>
            <param name="sourceUrl">The source URL</param>
            <param name="sourceSelectionResult">The source element</param>
            <param name="parentCollection">The parent collection of the source element</param>
            <param name="targetItem">The target of the operation</param>
            <param name="depth">The depth</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.DeleteHandler">
            <summary>
            The implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IDeleteHandler"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.DeleteHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.DeleteHandler"/> class.
            </summary>
            <param name="rootFileSystem">The root file system</param>
            <param name="context">The current WebDAV context</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.DeleteHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.DeleteHandler.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler">
            <summary>
            The implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IGetHandler"/> and <see cref="T:FubarDev.WebDavServer.Handlers.IHeadHandler"/> interfaces
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler"/> class.
            </summary>
            <param name="fileSystem">The root file system</param>
            <param name="context">The WebDAV context</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler.FileSystem">
            <summary>
            Gets the root file system
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.GetHeadHandler.HeadAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.LockHandler">
            <summary>
            Implements the <see cref="T:FubarDev.WebDavServer.Locking.ILockManager"/> interface.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.LockHandler.#ctor(FubarDev.WebDavServer.IWebDavContext,FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.Locking.ILockManager,FubarDev.WebDavServer.Locking.ITimeoutPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.LockHandler"/> class.
            </summary>
            <param name="context">The WebDAV request context</param>
            <param name="rootFileSystem">The root file system</param>
            <param name="lockManager">The lock manager</param>
            <param name="timeoutPolicy">The timeout policy for the selection of the <see cref="T:FubarDev.WebDavServer.Model.Headers.TimeoutHeader"/> value</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.LockHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.LockHandler.LockAsync(System.String,FubarDev.WebDavServer.Model.lockinfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.LockHandler.RefreshLockAsync(System.String,FubarDev.WebDavServer.Model.Headers.IfHeader,FubarDev.WebDavServer.Model.Headers.TimeoutHeader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.MkColHandler">
            <summary>
            Implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IMkColHandler"/> interface.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.MkColHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext,FubarDev.WebDavServer.Props.IEntryPropertyInitializer)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.MkColHandler"/> class.
            </summary>
            <param name="rootFileSystem">The root file system</param>
            <param name="context">The WebDAV request context</param>
            <param name="entryPropertyInitializer">The property initializer</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.MkColHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.MkColHandler.MkColAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.MoveHandler">
            <summary>
            The implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IMoveHandler"/> interface.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.MoveHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext,Microsoft.Extensions.Options.IOptions{FubarDev.WebDavServer.Handlers.Impl.MoveHandlerOptions},Microsoft.Extensions.Logging.ILogger{FubarDev.WebDavServer.Handlers.Impl.MoveHandler},System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.MoveHandler"/> class.
            </summary>
            <param name="rootFileSystem">The root file system</param>
            <param name="host">The WebDAV server context</param>
            <param name="options">The options for the <c>MOVE</c> handler</param>
            <param name="logger">The logger for this handler</param>
            <param name="serviceProvider">The service provider used to lazily query the <see cref="T:FubarDev.WebDavServer.Engines.Remote.IRemoteMoveTargetActionsFactory"/> implementation</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.MoveHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.MoveHandler.MoveAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.MoveHandler.CreateRemoteTargetActionsAsync(System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.MoveHandler.CreateLocalTargetActions(FubarDev.WebDavServer.RecursiveProcessingMode)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.MoveHandlerOptions">
            <summary>
            The options for the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.MoveHandler"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.MoveHandlerOptions.Mode">
            <summary>
            Gets or sets the mode that determines the method used to move files
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.MoveHandlerOptions.OverwriteAsDefault">
            <summary>
            Gets or sets a value indicating whether the destination of a move operation is overwriteable when
            the client doesn't specify the <see cref="T:FubarDev.WebDavServer.Model.Headers.OverwriteHeader"/>.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.OptionsHandler">
            <summary>
            Implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IOptionsHandler"/> interface.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.OptionsHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.OptionsHandler"/> class.
            </summary>
            <param name="rootFileSystem">The root file system</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.OptionsHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.OptionsHandler.OptionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler">
            <summary>
            The implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IPropFindHandler"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext,Microsoft.Extensions.Options.IOptions{FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler"/> class.
            </summary>
            <param name="fileSystem">The root file system</param>
            <param name="context">The WebDAV request context</param>
            <param name="options">The options for this handler</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler.FileSystem">
            <summary>
            Gets the root file system
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler.PropFindAsync(System.String,FubarDev.WebDavServer.Model.propfind,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions">
            <summary>
            Options for <see cref="T:FubarDev.WebDavServer.Handlers.Impl.PropFindHandler"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions.UseAbsoluteHref">
            <summary>
            Gets or sets a value indicating whether the PROPFIND handler should return absolute href values.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions.OmitLockOwner">
            <summary>
            Gets or sets a value indicating whether the handler should omit the <c>owner</c> element of an <c>activelock</c> element.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropFindHandlerOptions.OmitLockToken">
            <summary>
            Gets or sets a value indicating whether the handler should omit the <c>locktoken</c> element of an <c>activelock</c> element.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.PropPatchHandler">
            <summary>
            Implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IPropPatchHandler"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PropPatchHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.PropPatchHandler"/> class.
            </summary>
            <param name="fileSystem">The root file system</param>
            <param name="context">The WebDAV request context</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PropPatchHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PropPatchHandler.PropPatchAsync(System.String,FubarDev.WebDavServer.Model.propertyupdate,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.PutHandler">
            <summary>
            Implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IPutHandler"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PutHandler.#ctor(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.IWebDavContext,FubarDev.WebDavServer.Props.IEntryPropertyInitializer,Microsoft.Extensions.Logging.ILogger{FubarDev.WebDavServer.Handlers.Impl.PutHandler})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.PutHandler"/> class.
            </summary>
            <param name="fileSystem">The root file system</param>
            <param name="context">The WebDAV request context</param>
            <param name="entryPropertyInitializer">The property initializer</param>
            <param name="logger">The logger</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.PutHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.PutHandler.PutAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.Impl.UnlockHandler">
            <summary>
            The implementation of the <see cref="T:FubarDev.WebDavServer.Handlers.IUnlockHandler"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.UnlockHandler.#ctor(FubarDev.WebDavServer.IWebDavContext,FubarDev.WebDavServer.Locking.ILockManager)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Handlers.Impl.UnlockHandler"/> class.
            </summary>
            <param name="context">The WebDAV request context</param>
            <param name="lockManager">The global lock manager</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Handlers.Impl.UnlockHandler.HttpMethods">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.Impl.UnlockHandler.UnlockAsync(System.String,FubarDev.WebDavServer.Model.Headers.LockTokenHeader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IOptionsHandler">
            <summary>
            Interface for the <c>OPTIONS</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IOptionsHandler.OptionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Queries the options for a given path.
            </summary>
            <remarks>
            This is used to identify the WebDAV capabilities at a given URL.
            </remarks>
            <param name="path">The root-relataive file system path to query the options for</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IPropFindHandler">
            <summary>
            Interface for the <c>PROPFIND</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IPropFindHandler.PropFindAsync(System.String,FubarDev.WebDavServer.Model.propfind,System.Threading.CancellationToken)">
            <summary>
            Queries properties (dead or live) for a given <paramref name="path"/>.
            </summary>
            <param name="path">The path to query the properties for</param>
            <param name="request">Some information about the properties to query</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IPropPatchHandler">
            <summary>
            Interface for the <c>PROPPATCH</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IPropPatchHandler.PropPatchAsync(System.String,FubarDev.WebDavServer.Model.propertyupdate,System.Threading.CancellationToken)">
            <summary>
            Patches (sets or removes) properties from the given <paramref name="path"/>
            </summary>
            <param name="path">The path to patch the properties for</param>
            <param name="request">The properties to patch</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IPutHandler">
            <summary>
            Interface for the <c>PUT</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IPutHandler.PutAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a document at the given <paramref name="path"/>
            </summary>
            <param name="path">The path where to create or update the document</param>
            <param name="data">The data to write to the new or existing document</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Handlers.IUnlockHandler">
            <summary>
            Interface for the <c>UNLOCK</c> handler
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Handlers.IUnlockHandler.UnlockAsync(System.String,FubarDev.WebDavServer.Model.Headers.LockTokenHeader,System.Threading.CancellationToken)">
            <summary>
            Removes a LOCK with the given <paramref name="stateToken"/> from the given <paramref name="path"/>
            </summary>
            <param name="path">The path to remove the lock for</param>
            <param name="stateToken">The state token of the lock to remove</param>
            <param name="cancellationToken">The cancellcation token</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.IMimeTypeDetector">
            <summary>
            Interface to be implemented by a mime type detector
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.IMimeTypeDetector.TryDetect(FubarDev.WebDavServer.FileSystem.IEntry,System.String@)">
            <summary>
            Tries to detect the mime type for a given <paramref name="entry"/>
            </summary>
            <param name="entry">The <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/> to detect the mime type for</param>
            <param name="mimeType">The detected mime type</param>
            <returns><c>true</c> when the mime type could be detected</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.ISystemClock">
            <summary>
            Interface for querying the system clock
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.ISystemClock.UtcNow">
            <summary>
            Gets the <see cref="P:System.DateTime.UtcNow"/>
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.IWebDavContext">
            <summary>
            The WebDAV request context
            </summary>
            <remarks>
            This is the equivalent of ASP.NET Cores <c>HttpContext</c>
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.RequestProtocol">
            <summary>
            Gets the request protocol (<c>http</c> or <c>https</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.PublicRelativeRequestUrl">
            <summary>
            Gets the relative request URL (e.g. <c>/webdav/path-to-controller/test.txt</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.PublicAbsoluteRequestUrl">
            <summary>
            Gets the absolute request URL (e.g. <c>http://your-webdav-server/webdav/path-to-controller/test.txt</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.PublicControllerUrl">
            <summary>
            Gets the base URL of the web service up to the controller path (e.g. <c>http://your-webdav-server/webdav/path-to-controller/</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.PublicBaseUrl">
            <summary>
            Gets the base URL of the web service (e.g. <c>http://your-webdav-server/webdav/</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.PublicRootUrl">
            <summary>
            Gets the root URL of the web service (e.g. <c>http://your-webdav-server/</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.ServiceRelativeRequestUrl">
            <summary>
            Gets the relative request URL (e.g. <c>/base-path/path-to-controller/test.txt</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.ServiceAbsoluteRequestUrl">
            <summary>
            Gets the absolute request URL (e.g. <c>http://localhost/base-path/path-to-controller/test.txt</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.ServiceBaseUrl">
            <summary>
            Gets the base URL of the web service (e.g. <c>http://localhost/base-path/</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.ServiceRootUrl">
            <summary>
            Gets the root URL of the web service (e.g. <c>http://localhost/</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.ControllerRelativeUrl">
            <summary>
            Gets the relative request URL (e.g. <c>path-to-controller/</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.ActionUrl">
            <summary>
            Gets the relative request URL (e.g. <c>test.txt</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.DetectedClient">
            <summary>
            Gets the parsed user agent
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.RequestHeaders">
            <summary>
            Gets the request headers (partially parsed)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.User">
            <summary>
            Gets the authenticated user
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavContext.Dispatcher">
            <summary>
            Gets the WebDAV dispatcher
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.IWebDavDispatcher">
            <summary>
            The interface of a WebDAV server implementation
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavDispatcher.SupportedClasses">
            <summary>
            Gets the list of supported WebDAV classes
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavDispatcher.Formatter">
            <summary>
            Gets the formatter for the WebDAV XML responses
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavDispatcher.Class1">
            <summary>
            Gets the WebDAV class 1 implementation
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavDispatcher.Class2">
            <summary>
            Gets the WebDAV class 2 implementation
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.IWebDavRequestHeaders">
            <summary>
            Interface for the access to the request headers
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.ContentLength">
            <summary>
            Gets the <c>Content-Length</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.Depth">
            <summary>
            Gets the <c>Depth</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.Overwrite">
            <summary>
            Gets the value of the <c>Overwrite</c> (<see cref="T:FubarDev.WebDavServer.Model.Headers.OverwriteHeader"/>) header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.If">
            <summary>
            Gets the <c>If</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.IfMatch">
            <summary>
            Gets the <c>If-Match</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.IfNoneMatch">
            <summary>
            Gets the <c>If-None-Match</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.IfModifiedSince">
            <summary>
            Gets the <c>If-Modified-Since</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.IfUnmodifiedSince">
            <summary>
            Gets the <c>If-Unmodified-Since</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.Range">
            <summary>
            Gets the <c>Range</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.Timeout">
            <summary>
            Gets the <c>Timeout</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.Headers">
            <summary>
            Gets all headers
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavRequestHeaders.Item(System.String)">
            <summary>
            Gets a headers values by name
            </summary>
            <param name="name">The name of the header</param>
            <returns>The header values</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.IWebDavResponse">
            <summary>
            Access to all elements that needs to be set during a WebDAV response
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavResponse.Dispatcher">
            <summary>
            Gets the dispatcher that handles all WebDAV requests
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavResponse.Headers">
            <summary>
            Gets the HTTP response headers
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavResponse.ContentType">
            <summary>
            Gets or sets the content type
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavResponse.Body">
            <summary>
            Gets the response body stream
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.IWebDavResult">
            <summary>
            The result of a WebDAV operation
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.IWebDavResult.StatusCode">
            <summary>
            Gets the WebDAV status code
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.IWebDavResult.ExecuteResultAsync(FubarDev.WebDavServer.IWebDavResponse,System.Threading.CancellationToken)">
            <summary>
            Writes the result to a <paramref name="response"/>
            </summary>
            <param name="response">The response object to write to</param>
            <param name="ct">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ActiveLock">
            <summary>
            A generic implementation of an active lock
            </summary>
            <remarks>
            The <see cref="T:FubarDev.WebDavServer.Locking.ILockManager"/> implementation might use a different implementation
            of an <see cref="T:FubarDev.WebDavServer.Locking.IActiveLock"/>.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.#ctor(FubarDev.WebDavServer.Locking.ILock,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ActiveLock"/> class.
            </summary>
            <param name="l">The lock to create this active lock from</param>
            <param name="issued">The date/time when this lock was issued</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.#ctor(FubarDev.WebDavServer.Locking.ILock,System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ActiveLock"/> class.
            </summary>
            <param name="l">The lock to create this active lock from</param>
            <param name="issued">The date/time when this lock was issued</param>
            <param name="timeout">Override the timeout from the original lock (to enforce rounding)</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.#ctor(System.String,System.String,System.Boolean,System.Xml.Linq.XElement,FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockShareMode,System.TimeSpan,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ActiveLock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
            <param name="issued">The date/time when this lock was issued</param>
            <param name="lastRefresh">The date/time of the last refresh</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.#ctor(System.String,System.String,System.Boolean,System.Xml.Linq.XElement,FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockShareMode,System.TimeSpan,System.DateTime,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ActiveLock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
            <param name="issued">The date/time when this lock was issued</param>
            <param name="lastRefresh">The date/time of the last refresh</param>
            <param name="stateToken">The stateTokenh</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ActiveLock.StateToken">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ActiveLock.Issued">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ActiveLock.LastRefresh">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ActiveLock.Expiration">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLock.ToString">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ActiveLockExtensions">
            <summary>
            Extension methods for the <see cref="T:FubarDev.WebDavServer.Locking.IActiveLock"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ActiveLockExtensions.ToXElement(FubarDev.WebDavServer.Locking.IActiveLock,System.Boolean,System.Boolean)">
            <summary>
            Creates an <see cref="T:System.Xml.Linq.XElement"/> for a <see cref="T:FubarDev.WebDavServer.Locking.IActiveLock"/>
            </summary>
            <param name="l">The active lock to create the <see cref="T:System.Xml.Linq.XElement"/> for</param>
            <param name="omitOwner">Should the owner be omitted?</param>
            <param name="omitToken">Should the lock state token be omitted?</param>
            <returns>The newly created <see cref="T:System.Xml.Linq.XElement"/> for the active lock</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding">
            <summary>
            The default rounding implementation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding.#ctor(FubarDev.WebDavServer.Locking.DefaultLockTimeRoundingMode)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding"/> class.
            </summary>
            <param name="roundingMode">The rounding mode</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding.Round(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultLockTimeRounding.Round(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.DefaultLockTimeRoundingMode">
            <summary>
            The rounding modes for the default rounding mode implementation
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.DefaultLockTimeRoundingMode.OneSecond">
            <summary>
            Round to the next second
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.DefaultLockTimeRoundingMode.OneHundredMilliseconds">
            <summary>
            Round to the next 100 milliseconds
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy">
            <summary>
            The default timeout policy
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy.#ctor(Microsoft.Extensions.Options.IOptions{FubarDev.WebDavServer.Locking.DefaultTimeoutPolicyOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy"/> class.
            </summary>
            <param name="options">The options to configure this <see cref="T:FubarDev.WebDavServer.Locking.ITimeoutPolicy"/> implementation.</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy.SelectTimeout(System.Collections.Generic.IReadOnlyCollection{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicyOptions">
            <summary>
            The options for the <see cref="T:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicy"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicyOptions.AllowInfiniteTimeout">
            <summary>
            Gets or sets a value indicating whether the timeout may be infinite
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.DefaultTimeoutPolicyOptions.MaxTimeout">
            <summary>
            Gets or sets the maximum timeout
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.IActiveLock">
            <summary>
            An interface for the information about an active lock
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IActiveLock.StateToken">
            <summary>
            Gets the state token
            </summary>
            <remarks>
            This is always a valid URI (might be relative)
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IActiveLock.Issued">
            <summary>
            Gets the timestamp when this lock was issued
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IActiveLock.LastRefresh">
            <summary>
            Gets the timestamp when this lock was refreshed
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IActiveLock.Expiration">
            <summary>
            Gets the timestamp when this lock expires
            </summary>
            <seealso cref="P:FubarDev.WebDavServer.Locking.ILock.Timeout"/>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.IImplicitLock">
            <summary>
            The interface for the result of the <c>If</c> header evaluation
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IImplicitLock.OwnedLocks">
            <summary>
            Gets the locks matched by the <c>If</c> header or implicit shared lock
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IImplicitLock.ConflictingLocks">
            <summary>
            Gets the locks preventing the usage of an implicit lock
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IImplicitLock.IsTemporaryLock">
            <summary>
            Gets a value indicating whether an implicit lock was created
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.IImplicitLock.IsSuccessful">
            <summary>
            Gets a value indicating whether the <c>If</c> header was evaluated successfully
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.IImplicitLock.DisposeAsync(System.Threading.CancellationToken)">
            <summary>
            Disposes the temporary lock (when it was issued)
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.IImplicitLock.CreateErrorResponse">
            <summary>
            Creates an error response when <see cref="P:FubarDev.WebDavServer.Locking.IImplicitLock.IsSuccessful"/> is <see langword="false"/>
            </summary>
            <returns>The WebDAV response</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ILock">
            <summary>
            Interface for a requested lock
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.Path">
            <summary>
            Gets the path the lock is for
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.Href">
            <summary>
            Gets the href the lock is for
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.Recursive">
            <summary>
            Gets a value indicating whether the lock must be applied recusively
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.AccessType">
            <summary>
            Gets the access type of the lock
            </summary>
            <seealso cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.ShareMode">
            <summary>
            Gets the share mode of the lock
            </summary>
            <seealso cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILock.Timeout">
            <summary>
            Gets the timeout of the lock
            </summary>
            <remarks>
            The lock is automatically released after the expiration of the timeout.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILock.GetOwner">
            <summary>
            Gets the XML identifying the owner of the lock
            </summary>
            <returns>
            The XML identifying the owner of the lock
            </returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ILockCleanupTask">
            <summary>
            An interface for a background task that removes expired locks
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockCleanupTask.Add(FubarDev.WebDavServer.Locking.ILockManager,FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Adds a lock to be tracked by this cleanup task.
            </summary>
            <param name="lockManager">The lock manager that created this active lock.</param>
            <param name="activeLock">The active lock to track</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockCleanupTask.Remove(FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Removes the active lock so that it isn't tracked any more by this cleanup task.
            </summary>
            <param name="activeLock">The active lock to remove</param>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ILockManager">
            <summary>
            The interface for a lock manager
            </summary>
        </member>
        <member name="E:FubarDev.WebDavServer.Locking.ILockManager.LockAdded">
            <summary>
            Gets called when a lock was added
            </summary>
        </member>
        <member name="E:FubarDev.WebDavServer.Locking.ILockManager.LockReleased">
            <summary>
            Gets called when a lock was released
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILockManager.Cost">
            <summary>
            Gets the cost of a LOCK/UNLOCK or lock discovery operation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.LockAsync(FubarDev.WebDavServer.Locking.ILock,System.Threading.CancellationToken)">
            <summary>
            Tries to issue a lock
            </summary>
            <param name="l">The lock to issue</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Either the list of locks preventing issuing a lock or the active lock created</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.LockImplicitAsync(FubarDev.WebDavServer.FileSystem.IFileSystem,System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Model.Headers.IfHeaderList},FubarDev.WebDavServer.Locking.ILock,System.Threading.CancellationToken)">
            <summary>
            Tries to find a lock identified by the <paramref name="ifHeaderLists"/> or creates a new one if none was found.
            </summary>
            <param name="rootFileSystem">The root file system to identify the lock for</param>
            <param name="ifHeaderLists">The <c>If</c> header lists that tries to identify the lock to use</param>
            <param name="lockRequirements">The requirements the found lock must meet</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Either the list of locks preventing issuing a lock or the active lock created or reused</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.RefreshLockAsync(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.Model.Headers.IfHeader,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Tries to refresh a lock
            </summary>
            <param name="rootFileSystem">The root file system</param>
            <param name="ifHeader">The header that tries to identify the lock to refresh</param>
            <param name="timeout">The header containing the new timeouts</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Either the list of locks preventing refreshing a lock or the refreshed lock</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.ReleaseAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Releases a lock with the given state token
            </summary>
            <param name="path">The path to release the lock for</param>
            <param name="stateToken">The state token of the lock to release</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns><see langword="true" /> when there was a lock to remove</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.GetLocksAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all active locks
            </summary>
            <remarks>
            Be aware that the locks could've been released in the mean time by a concurrent
            access or by the <see cref="T:FubarDev.WebDavServer.Locking.LockCleanupTask"/>.
            </remarks>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Returns all active locks</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockManager.GetAffectedLocksAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets all active locks
            </summary>
            <remarks>
            Be aware that the locks could've been released in the mean time by a concurrent
            access or by the <see cref="T:FubarDev.WebDavServer.Locking.LockCleanupTask"/>.
            </remarks>
            <param name="path">The file system path to get the locks for</param>
            <param name="findChildren">Return all locks that are a child of the given <paramref name="path"/>?</param>
            <param name="findParents">Return all locks that are a parent of the given <paramref name="path"/>?</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>Returns all active locks</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ILockManagerOptions">
            <summary>
            The options for the <see cref="T:FubarDev.WebDavServer.Locking.ILockManager"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ILockManagerOptions.Rounding">
            <summary>
            Gets or sets the time rounding implementation
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ILockTimeRounding">
            <summary>
            Interface for classes that want to implement custom rounding
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockTimeRounding.Round(System.DateTime)">
            <summary>
            The rounding implementation
            </summary>
            <param name="dt">The date and time to round</param>
            <returns>The new <see cref="T:System.DateTime"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ILockTimeRounding.Round(System.TimeSpan)">
            <summary>
            The rounding implementation
            </summary>
            <param name="ts">The time span to round</param>
            <returns>The new timestamp</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ImplicitLock">
            <summary>
            Implementation of the <see cref="T:FubarDev.WebDavServer.Locking.IImplicitLock"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ImplicitLock.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ImplicitLock"/> class.
            </summary>
            <param name="isSuccess"><see langword="false"/> = All <c>If</c> header conditions failed,
            <see langword="true"/> = No lock manager, but still OK</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ImplicitLock.#ctor(System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ImplicitLock"/> class.
            </summary>
            <param name="ownedLocks">The locks matched by the <c>If</c> header</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ImplicitLock.#ctor(FubarDev.WebDavServer.Locking.ILockManager,FubarDev.WebDavServer.Locking.LockResult)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.ImplicitLock"/> class.
            </summary>
            <param name="lockManager">The lock manager</param>
            <param name="lockResult">Either the implicit lock or the conflicting locks</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ImplicitLock.OwnedLocks">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ImplicitLock.ConflictingLocks">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ImplicitLock.IsTemporaryLock">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.ImplicitLock.IsSuccessful">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ImplicitLock.CreateErrorResponse">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ImplicitLock.DisposeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.ITimeoutPolicy">
            <summary>
            The policy to select the lock timeout
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.ITimeoutPolicy.SelectTimeout(System.Collections.Generic.IReadOnlyCollection{System.TimeSpan})">
            <summary>
            Selects the timeout from the list of client requested timeouts.
            </summary>
            <param name="timeouts">The timeouts requested by the client</param>
            <returns>The timeout to use</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.Lock">
            <summary>
            A generic implementation of the <see cref="T:FubarDev.WebDavServer.Locking.ILock"/> interface.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.#ctor(System.Uri,System.Uri,System.Boolean,System.Xml.Linq.XElement,FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockShareMode,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.Lock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.#ctor(System.String,System.String,System.Boolean,System.Xml.Linq.XElement,FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockShareMode,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.Lock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.#ctor(System.String,System.String,System.Boolean,System.Xml.Linq.XElement,System.String,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.Lock"/> class.
            </summary>
            <param name="path">The file system path (root-relative) this lock should be applied to</param>
            <param name="href">The href this lock should be applied to (might be relative or absolute)</param>
            <param name="recursive">Must the lock be applied recursively to all children?</param>
            <param name="owner">The owner of the lock</param>
            <param name="accessType">The <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> of the lock</param>
            <param name="shareMode">The <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> of the lock</param>
            <param name="timeout">The lock timeout</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Path">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Href">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Recursive">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Owner">
            <summary>
            Gets the XML specifying the owner of the lock.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.AccessType">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.ShareMode">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.Lock.Timeout">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.GetOwner">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.Lock.ToString">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockAccessType">
            <summary>
            The lock access type
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockAccessType.Write">
            <summary>
            The default <c>write</c> lock access type
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockAccessType.Name">
            <summary>
            Gets the XML name of the lock access type
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockAccessType.XmlValue">
            <summary>
            Gets the <see cref="T:FubarDev.WebDavServer.Model.locktype"/> element for this lock access type
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockAccessType.op_Equality(FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockAccessType)">
            <summary>
            Compares two lock access types for their equality
            </summary>
            <param name="x">The first lock access type to compare</param>
            <param name="y">The second lock access type to compare</param>
            <returns><see langword="true"/> when both lock access types are of equal value</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockAccessType.op_Inequality(FubarDev.WebDavServer.Locking.LockAccessType,FubarDev.WebDavServer.Locking.LockAccessType)">
            <summary>
            Compares two lock access types for their inequality
            </summary>
            <param name="x">The first lock access type to compare</param>
            <param name="y">The second lock access type to compare</param>
            <returns><see langword="true"/> when both lock access types are not of equal value</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockAccessType.Parse(System.String)">
            <summary>
            Parses the given lock access type value and returns the corresponding <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/> instance.
            </summary>
            <param name="accessType">The access type to parse</param>
            <returns>The corresponding <see cref="T:FubarDev.WebDavServer.Locking.LockAccessType"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockAccessType.Equals(FubarDev.WebDavServer.Locking.LockAccessType)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockAccessType.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockAccessType.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockCleanupTask">
            <summary>
            A background task that removes expired locks
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.#ctor(FubarDev.WebDavServer.ISystemClock,Microsoft.Extensions.Logging.ILogger{FubarDev.WebDavServer.Locking.LockCleanupTask})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockCleanupTask"/> class.
            </summary>
            <param name="systemClock">The system clock</param>
            <param name="logger">The logger for the cleanup task</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.Add(FubarDev.WebDavServer.Locking.ILockManager,FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Adds a lock to be tracked by this cleanup task.
            </summary>
            <param name="lockManager">The lock manager that created this active lock.</param>
            <param name="activeLock">The active lock to track</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.Remove(FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Removes the active lock so that it isn't tracked any more by this cleanup task.
            </summary>
            <param name="activeLock">The active lock to remove</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.Dispose">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockCleanupTask.TimerExpirationCallback(System.Object)">
            <summary>
            The timer callback which removes an expired item
            </summary>
            <param name="state">The (unused) state</param>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockEventArgs">
            <summary>
            The event argument when a lock gets added to or removed from the lock manager
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockEventArgs.#ctor(FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockEventArgs"/> class.
            </summary>
            <param name="activeLock">The lock that got added to or remoted from the lock manager</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockEventArgs.Lock">
            <summary>
            Gets the lock that got added to or remoted from the lock manager
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockManagerBase">
            <summary>
            The base implementation for an <see cref="T:FubarDev.WebDavServer.Locking.ILockManager"/>
            </summary>
            <remarks>
            The derived class must implement <see cref="M:FubarDev.WebDavServer.Locking.LockManagerBase.BeginTransactionAsync(System.Threading.CancellationToken)"/> and
            return an object that implements <see cref="T:FubarDev.WebDavServer.Locking.LockManagerBase.ILockManagerTransaction"/>.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.#ctor(FubarDev.WebDavServer.Locking.ILockCleanupTask,FubarDev.WebDavServer.ISystemClock,Microsoft.Extensions.Logging.ILogger,FubarDev.WebDavServer.Locking.ILockManagerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockManagerBase"/> class.
            </summary>
            <param name="cleanupTask">The clean-up task for expired locks</param>
            <param name="systemClock">The system clock interface</param>
            <param name="logger">The logger</param>
            <param name="options">The options of the lock manager</param>
        </member>
        <member name="E:FubarDev.WebDavServer.Locking.LockManagerBase.LockAdded">
            <inheritdoc />
        </member>
        <member name="E:FubarDev.WebDavServer.Locking.LockManagerBase.LockReleased">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockManagerBase.ILockManagerTransaction">
            <summary>
            This interface must be implemented by the inheriting class.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.ILockManagerTransaction.GetActiveLocksAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all active locks
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The collection of all active locks</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.ILockManagerTransaction.AddAsync(FubarDev.WebDavServer.Locking.IActiveLock,System.Threading.CancellationToken)">
            <summary>
            Adds a new active lock
            </summary>
            <param name="activeLock">The active lock to add</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns><see langword="true"/> when adding the lock succeeded</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.ILockManagerTransaction.UpdateAsync(FubarDev.WebDavServer.Locking.IActiveLock,System.Threading.CancellationToken)">
            <summary>
            Updates the active lock
            </summary>
            <param name="activeLock">The active lock with the updated values</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns><see langword="true"/> when the lock was updatet, <see langword="false"/> when the lock was added instead</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.ILockManagerTransaction.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes an active lock with the given <paramref name="stateToken"/>
            </summary>
            <param name="stateToken">The state token of the active lock to remove</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns><see langword="true"/> when a lock with the given <paramref name="stateToken"/> existed and could be removed</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.ILockManagerTransaction.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an active lock by its <paramref name="stateToken"/>
            </summary>
            <param name="stateToken">The state token to search for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The active lock for the state token or <see langword="null"/> when the lock wasn't found</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.ILockManagerTransaction.CommitAsync(System.Threading.CancellationToken)">
            <summary>
            Commits the changes made during the transaction
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockManagerBase.Cost">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockManagerBase.LockCleanupTask">
            <summary>
            Gets the lock cleanup task
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.LockAsync(FubarDev.WebDavServer.Locking.ILock,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.LockImplicitAsync(FubarDev.WebDavServer.FileSystem.IFileSystem,System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Model.Headers.IfHeaderList},FubarDev.WebDavServer.Locking.ILock,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.RefreshLockAsync(FubarDev.WebDavServer.FileSystem.IFileSystem,FubarDev.WebDavServer.Model.Headers.IfHeader,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.ReleaseAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.GetLocksAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.GetAffectedLocksAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.NormalizePath(System.Uri)">
            <summary>
            Converts a client path to a system path.
            </summary>
            <remarks>
            <para>The client path has the form <c>http://localhost/root-file-system/relative/path</c> and is
            therefore always an absolute path. The returned path must be absolute too and might have
            the form <c>http://localhost/c/relative/path</c> or something similar. It is of utmost
            importance that the URI is always stable. The default implementation of this function
            doesn't make any conversions, because it assumes that the same path path always points
            to the same file system entry for all clients.</para>
            <para>
            A URI to a directory must always end in a slash (<c>/</c>).
            </para>
            </remarks>
            <param name="path">The client path to convert</param>
            <returns>The system path to be converted to</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.OnLockAdded(FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Gets called when a lock was added
            </summary>
            <param name="activeLock">The lock that was added</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.OnLockReleased(FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Gets called when a lock was released
            </summary>
            <param name="activeLock">The lock that was released</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.BeginTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Begins a new transaction
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The transaction to be used to update the active locks</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockManagerBase.Refresh(FubarDev.WebDavServer.Locking.IActiveLock,System.DateTime,System.TimeSpan)">
            <summary>
            Returns a new active lock whose new expiration date/time is recalculated using <paramref name="lastRefresh"/> and <paramref name="timeout"/>.
            </summary>
            <param name="activeLock">The active lock to refresh</param>
            <param name="lastRefresh">The date/time of the last refresh</param>
            <param name="timeout">The new timeout to apply to the lock</param>
            <returns>The new (refreshed) active lock</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockRefreshResult">
            <summary>
            The result of a LOCK refresh operation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockRefreshResult.#ctor(FubarDev.WebDavServer.Model.response)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockRefreshResult"/> class.
            </summary>
            <param name="errorResponse">The error to return</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockRefreshResult.#ctor(System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockRefreshResult"/> class.
            </summary>
            <param name="refreshedLocks">The active locks that could be refreshed</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockRefreshResult.RefreshedLocks">
            <summary>
            Gets the active lock when locking succeeded
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockRefreshResult.ErrorResponse">
            <summary>
            Gets the error response to return
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockReleaseStatus">
            <summary>
            Result of an UNLOCK
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockReleaseStatus.Success">
            <summary>
            UNLOCK successful
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockReleaseStatus.NoLock">
            <summary>
            No lock to release found
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockReleaseStatus.InvalidLockRange">
            <summary>
            The given path doesn't match the scope of the lock
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockResult">
            <summary>
            The result of a locking operation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockResult.#ctor(FubarDev.WebDavServer.Locking.IActiveLock)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockResult"/> class.
            </summary>
            <param name="activeLock">The active lock when locking succeeded</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockResult.#ctor(FubarDev.WebDavServer.Locking.LockStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockResult"/> class.
            </summary>
            <param name="conflictingLocks">The collection of locks preventing locking the given destination</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockResult.Lock">
            <summary>
            Gets the active lock when locking succeeded
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockResult.ConflictingLocks">
            <summary>
            Gets the collection of locks preventing locking the given destination.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockShareMode">
            <summary>
            The lock share mode
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockShareMode.Shared">
            <summary>
            Gets the default <c>shared</c> lock share mode
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Locking.LockShareMode.Exclusive">
            <summary>
            Gets the default <c>exclusive</c> lock share mode
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockShareMode.Name">
            <summary>
            Gets the XML name of the lock share mode
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockShareMode.XmlValue">
            <summary>
            Gets the <see cref="T:FubarDev.WebDavServer.Model.lockscope"/> element for this lock share mode
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockShareMode.op_Equality(FubarDev.WebDavServer.Locking.LockShareMode,FubarDev.WebDavServer.Locking.LockShareMode)">
            <summary>
            Compares two lock share modes for their equality
            </summary>
            <param name="x">The first lock share mode to compare</param>
            <param name="y">The second lock share mode to compare</param>
            <returns><see langword="true"/> when both lock share modes are of equal value</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockShareMode.op_Inequality(FubarDev.WebDavServer.Locking.LockShareMode,FubarDev.WebDavServer.Locking.LockShareMode)">
            <summary>
            Compares two lock share modes for their inequality
            </summary>
            <param name="x">The first lock share mode to compare</param>
            <param name="y">The second lock share mode to compare</param>
            <returns><see langword="true"/> when both lock share modes are not of equal value</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockShareMode.Parse(System.String)">
            <summary>
            Parses the given lock share mode value and returns the corresponding <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/> instance.
            </summary>
            <param name="shareMode">The share mode to parse</param>
            <returns>The corresponding <see cref="T:FubarDev.WebDavServer.Locking.LockShareMode"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockShareMode.Equals(FubarDev.WebDavServer.Locking.LockShareMode)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockShareMode.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockShareMode.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Locking.LockStatus">
            <summary>
            A list of locks affecting a single lock (request)
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockStatus.#ctor(System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock},System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock},System.Collections.Generic.IReadOnlyCollection{FubarDev.WebDavServer.Locking.IActiveLock})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Locking.LockStatus"/> class.
            </summary>
            <param name="referenceLocks">The locks found at the reference position</param>
            <param name="parentLocks">The locks found at positions higher in the hierarchy</param>
            <param name="childLocks">The locks found at positions lower in the hierarchy</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.Empty">
            <summary>
            Gets the empty lock status
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.ReferenceLocks">
            <summary>
            Gets the locks found at the reference position
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.ParentLocks">
            <summary>
            Gets the locks found at positions higher in the hierarchy
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.ChildLocks">
            <summary>
            Gets the locks found at positions lower in the hierarchy
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.IsEmpty">
            <summary>
            Gets a value indicating whether there where no locks found at all
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Locking.LockStatus.Count">
            <summary>
            Gets the number of found locks
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Locking.LockStatus.GetLocks">
            <summary>
            Gets all found locks
            </summary>
            <returns>all found locks</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.CodedUrlParser">
            <summary>
            The parser for a <c>Coded-URL</c>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.CodedUrlParser.Parse(System.String)">
            <summary>
            Parse the <c>Coded-URL</c> from a <paramref name="source"/> <see langword="string"/>
            </summary>
            <param name="source">The <see langword="string"/> to parse the <c>Coded-URL</c> from</param>
            <returns>The parsed <c>Coded-URL</c></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.CodedUrlParser.TryParse(System.String,System.Uri@)">
            <summary>
            Tries to parse the <c>Coded-URL</c> from a <paramref name="source"/> <see langword="string"/>
            </summary>
            <param name="source">The <see langword="string"/> to parse the <c>Coded-URL</c> from</param>
            <param name="codedUrl">The parsed <c>Coded-URL</c></param>
            <returns><see langword="true"/> when the <c>Coded-URL</c> could be parsed successfully</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.CodedUrlParser.TryParse(FubarDev.WebDavServer.Utils.StringSource,System.Uri@)">
            <summary>
            Tries to parse the <c>Coded-URL</c> from a <see cref="T:FubarDev.WebDavServer.Utils.StringSource"/>
            </summary>
            <param name="source">The <see cref="T:FubarDev.WebDavServer.Utils.StringSource"/> to parse the <c>Coded-URL</c> from</param>
            <param name="codedUrl">The parsed <c>Coded-URL</c></param>
            <returns><see langword="true"/> when the <c>Coded-URL</c> could be parsed successfully</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.DepthHeader">
            <summary>
            The representation of the <c>Depth</c> header
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.Headers.DepthHeader.Zero">
            <summary>
            Gets the default <c>0</c> depth header
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.Headers.DepthHeader.One">
            <summary>
            Gets the default <c>1</c> depth header
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.Headers.DepthHeader.Infinity">
            <summary>
            Gets the default <c>infinity</c> depth header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.DepthHeader.OrderValue">
            <summary>
            Gets the ordinal value of the depth represented by this depth header instance
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.DepthHeader.Value">
            <summary>
            Gets the textual value of the depth header as given in the HTTP header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.DepthHeader.XmlValue">
            <summary>
            Gets the object used in XML de-/serialization
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.op_Equality(FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <summary>
            Compares two depth headers for their equality
            </summary>
            <param name="x">The first depth header to compare</param>
            <param name="y">The second depth header to compare</param>
            <returns><see langword="true"/> when both depth headers are of equal value</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.op_Inequality(FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <summary>
            Compares two depth headers for their inequality
            </summary>
            <param name="x">The first depth header to compare</param>
            <param name="y">The second depth header to compare</param>
            <returns><see langword="true"/> when both depth headers are not of equal value</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.op_GreaterThan(FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <summary>
            Compares if the <paramref name="x"/> depth header is of greater ordinal value than the <paramref name="y"/> depth header
            </summary>
            <param name="x">The first depth header to compare</param>
            <param name="y">The second depth header to compare</param>
            <returns><see langword="true"/> when the <paramref name="x"/> depth header is of greater ordinal value than the <paramref name="y"/> depth header</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.op_LessThan(FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <summary>
            Compares if the <paramref name="x"/> depth header is of lower ordinal value than the <paramref name="y"/> depth header
            </summary>
            <param name="x">The first depth header to compare</param>
            <param name="y">The second depth header to compare</param>
            <returns><see langword="true"/> when the <paramref name="x"/> depth header is of lower ordinal value than the <paramref name="y"/> depth header</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.op_GreaterThanOrEqual(FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <summary>
            Compares if the <paramref name="x"/> depth header is of the same or greater ordinal value than the <paramref name="y"/> depth header
            </summary>
            <param name="x">The first depth header to compare</param>
            <param name="y">The second depth header to compare</param>
            <returns><see langword="true"/> when the <paramref name="x"/> depth header is of the same or greater ordinal value than the <paramref name="y"/> depth header</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.op_LessThanOrEqual(FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <summary>
            Compares if the <paramref name="x"/> depth header is of the same or lower ordinal value than the <paramref name="y"/> depth header
            </summary>
            <param name="x">The first depth header to compare</param>
            <param name="y">The second depth header to compare</param>
            <returns><see langword="true"/> when the <paramref name="x"/> depth header is of the same or lower ordinal value than the <paramref name="y"/> depth header</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.Parse(System.String)">
            <summary>
            Parses the given depth header value and returns the corresponding <see cref="T:FubarDev.WebDavServer.Model.Headers.DepthHeader"/> instance.
            </summary>
            <param name="depth">The depth header to parse</param>
            <returns>The corresponding <see cref="T:FubarDev.WebDavServer.Model.Headers.DepthHeader"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.Parse(System.String,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <summary>
            Parses the given depth header value and returns the corresponding <see cref="T:FubarDev.WebDavServer.Model.Headers.DepthHeader"/> instance.
            </summary>
            <param name="depth">The depth header to parse</param>
            <param name="defaultDepth">The default depth header to use when the <paramref name="depth"/> is empty</param>
            <returns>The corresponding <see cref="T:FubarDev.WebDavServer.Model.Headers.DepthHeader"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.TryParse(System.String,FubarDev.WebDavServer.Model.Headers.DepthHeader@)">
            <summary>
            Tries to parse the depth header value
            </summary>
            <param name="depthText">The depth header value</param>
            <param name="depth">The found depth header</param>
            <returns><c>true</c> when the value could be parsed</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.TryParse(System.String,FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader@)">
            <summary>
            Tries to parse the depth header value
            </summary>
            <param name="depthText">The depth header value</param>
            <param name="defaultDepth">The default depth header to use when the <paramref name="depthText"/> is empty</param>
            <param name="depth">The found depth header</param>
            <returns><c>true</c> when the value could be parsed</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.Equals(FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeader.CompareTo(FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.DepthHeaderComparer">
            <summary>
            Comparer for the <see cref="T:FubarDev.WebDavServer.Model.Headers.DepthHeader"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.DepthHeaderComparer.Default">
            <summary>
            Gets the default depth header comparer
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeaderComparer.Compare(FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeaderComparer.Equals(FubarDev.WebDavServer.Model.Headers.DepthHeader,FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.DepthHeaderComparer.GetHashCode(FubarDev.WebDavServer.Model.Headers.DepthHeader)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.EntityTag">
            <summary>
            Structure for the HTTP entity tag
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.Headers.EntityTag.PropertyName">
            <summary>
            The default property name for the <c>getetag</c> WebDAV property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> struct.
            </summary>
            <param name="isWeak">Is the entity tag weak?</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.EntityTag.IsWeak">
            <summary>
            Gets a value indicating whether the entity tag is weak
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.EntityTag.Value">
            <summary>
            Gets the entity tag
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.EntityTag.IsEmpty">
            <summary>
            Gets a value indicating whether the entity tag structure is empty
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.op_Equality(FubarDev.WebDavServer.Model.Headers.EntityTag,FubarDev.WebDavServer.Model.Headers.EntityTag)">
            <summary>
            Compares two entity tags for their equality
            </summary>
            <param name="x">The first entity tag to compare</param>
            <param name="y">The second entity tag to compare</param>
            <returns><see langword="true"/> when both entity tags are of equal value</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.op_Inequality(FubarDev.WebDavServer.Model.Headers.EntityTag,FubarDev.WebDavServer.Model.Headers.EntityTag)">
            <summary>
            Compares two entity tags for their inequality
            </summary>
            <param name="x">The first entity tag to compare</param>
            <param name="y">The second entity tag to compare</param>
            <returns><see langword="true"/> when both entity tags are not of equal value</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Extracts an entity tag from the XML of a <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/>
            </summary>
            <param name="element">The XML of a <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/></param>
            <returns>The found entity tag</returns>
            <remarks>
            Returns a new strong entity tag when <paramref name="element"/> is <see langword="null"/>.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.Parse(System.String)">
            <summary>
            Parses the entity tags as passed in the HTTP header
            </summary>
            <param name="s">The textual entity tag representation</param>
            <returns>The found entity tags</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.AsStrong">
            <summary>
            Returns this entity tag as a new strong entity tag
            </summary>
            <returns>The new strong entity tag</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.AsWeak">
            <summary>
            Returns this entity tag as a new weak entity tag
            </summary>
            <returns>The new weak entity tag</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.Update">
            <summary>
            Returns an updated entity tag with a new <see cref="P:FubarDev.WebDavServer.Model.Headers.EntityTag.Value"/>
            </summary>
            <returns>The updated entity tag</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.ToXml">
            <summary>
            Creates a <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> XML from this entity tag
            </summary>
            <returns>The new <see cref="T:System.Xml.Linq.XElement"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.ToString">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.Equals(FubarDev.WebDavServer.Model.Headers.EntityTag)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTag.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.EntityTagComparer">
            <summary>
            A comparer for entity tags
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTagComparer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTagComparer"/> class.
            </summary>
            <param name="useStrongComparison">Has strong comparison to be used?</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.EntityTagComparer.Strong">
            <summary>
            Gets a default strong entity tag comparer
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.EntityTagComparer.Weak">
            <summary>
            Gets a default weak entity tag comparer
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTagComparer.Equals(FubarDev.WebDavServer.Model.Headers.EntityTag,FubarDev.WebDavServer.Model.Headers.EntityTag)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.EntityTagComparer.GetHashCode(FubarDev.WebDavServer.Model.Headers.EntityTag)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.IfHeader">
            <summary>
            Class that represents the HTTP <c>If</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeader.Lists">
            <summary>
            Gets all condition lists
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfHeader.Parse(System.String,FubarDev.WebDavServer.Model.Headers.EntityTagComparer,FubarDev.WebDavServer.IWebDavContext)">
            <summary>
            Parses the text into a <see cref="T:FubarDev.WebDavServer.Model.Headers.IfHeader"/>
            </summary>
            <param name="s">The text to parse</param>
            <param name="etagComparer">The comparer to use for entity tag comparison</param>
            <param name="context">The WebDAV request context</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.IfHeader"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.IfHeaderCondition">
            <summary>
            Represents a single condition for an HTTP <c>If</c> header
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderCondition.Not">
            <summary>
            Gets a value indicating whether the result should be negated
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderCondition.StateToken">
            <summary>
            Gets the state token to validate with
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderCondition.ETag">
            <summary>
            Gets the entity tag to validate with
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfHeaderCondition.IsMatch(System.Nullable{FubarDev.WebDavServer.Model.Headers.EntityTag},System.Collections.Generic.IReadOnlyCollection{System.Uri})">
            <summary>
            Validates if this condition matches the passed entity tag and/or state tokens
            </summary>
            <param name="etag">The entity tag</param>
            <param name="stateTokens">The state tokens</param>
            <returns><see langword="true"/> when this condition matches</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.IfHeaderList">
            <summary>
            Represents a list of <see cref="T:FubarDev.WebDavServer.Model.Headers.IfHeaderCondition"/>s.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.ResourceTag">
            <summary>
            Gets the resource tag which is always an absolute URI
            </summary>
            <remarks>
            When a relative URI gets sent from the client, then it gets converted into an
            absolute URI.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.RelativeHref">
            <summary>
            Gets the resource tag relative to the <see cref="P:FubarDev.WebDavServer.IWebDavContext.PublicRootUrl"/>.
            </summary>
            <remarks>
            Might be an absolute URL when the host or scheme don't match.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.Path">
            <summary>
            Gets the path to the destination relative to the <see cref="P:FubarDev.WebDavServer.IWebDavContext.PublicBaseUrl"/>.
            </summary>
            <remarks>
            Might be an absolute URL when the host or scheme don't match.
            </remarks>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.Conditions">
            <summary>
            Gets the collection of conditions that must be satisfied by this list.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.RequiresEntityTag">
            <summary>
            Gets a value indicating whether this condition list requires the <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/> of an <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/> for
            the evaluation.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfHeaderList.RequiresStateToken">
            <summary>
            Gets a value indicating whether this condition list requires the <see cref="P:FubarDev.WebDavServer.Locking.IActiveLock.StateToken"/> for the evaluation.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfHeaderList.IsMatch(System.Nullable{FubarDev.WebDavServer.Model.Headers.EntityTag},System.Collections.Generic.IReadOnlyCollection{System.Uri})">
            <summary>
            Validates if all conditions match the passed entity tag and/or state tokens
            </summary>
            <param name="etag">The entity tag</param>
            <param name="stateTokens">The state tokens</param>
            <returns><see langword="true"/> when this condition matches</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader">
            <summary>
            Class that represents the HTTP <c>If-Match</c> header
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.#ctor(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Model.Headers.EntityTag},FubarDev.WebDavServer.Model.Headers.EntityTagComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class.
            </summary>
            <param name="etags">The entity tags to match</param>
            <param name="etagComparer">The entity comparer to use</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.Parse(System.String)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class
            </summary>
            <param name="s">The header string to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.Parse(System.String,FubarDev.WebDavServer.Model.Headers.EntityTagComparer)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class
            </summary>
            <param name="s">The header string to parse</param>
            <param name="etagComparer">The entity tag comparer used for the <see cref="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.IsMatch(System.Nullable{FubarDev.WebDavServer.Model.Headers.EntityTag})"/> function</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class
            </summary>
            <param name="s">The header values to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.Parse(System.Collections.Generic.IEnumerable{System.String},FubarDev.WebDavServer.Model.Headers.EntityTagComparer)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class
            </summary>
            <param name="s">The header values to parse</param>
            <param name="etagComparer">The entity tag comparer used for the <see cref="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.IsMatch(System.Nullable{FubarDev.WebDavServer.Model.Headers.EntityTag})"/> function</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfMatchHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfMatchHeader.IsMatch(System.Nullable{FubarDev.WebDavServer.Model.Headers.EntityTag})">
            <summary>
            Returns a value that indicates whether the <paramref name="etag"/> is specified in the <c>If-Match</c> header
            </summary>
            <param name="etag">The entity tag to search for</param>
            <returns><see langword="true"/> when the <paramref name="etag"/> was found</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.IfModifiedSinceHeader">
            <summary>
            Class that represents the HTTP <c>If-Modified-Since</c> header
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfModifiedSinceHeader.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfModifiedSinceHeader"/> class.
            </summary>
            <param name="lastWriteTimeUtc">The last time the defination was changed</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfModifiedSinceHeader.LastWriteTimeUtc">
            <summary>
            Gets the last time the definition was changed
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfModifiedSinceHeader.Parse(System.String)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfModifiedSinceHeader"/> class
            </summary>
            <param name="s">The header string to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfModifiedSinceHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfModifiedSinceHeader.IsMatch(System.DateTime)">
            <summary>
            Returns a value that indicates whether the <paramref name="lastWriteTimeUtc"/> is past the value in the <c>If-Modified-Since</c> header
            </summary>
            <param name="lastWriteTimeUtc">The last write time of the entry to compare with</param>
            <returns><see langword="true"/> when the <paramref name="lastWriteTimeUtc"/> is past the value in the <c>If-Modified-Since</c> header</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader">
            <summary>
            Class that represents the HTTP <c>If-None-Match</c> header
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader.#ctor(System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Model.Headers.EntityTag},FubarDev.WebDavServer.Model.Headers.EntityTagComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class.
            </summary>
            <param name="etags">The entity tags to match</param>
            <param name="etagComparer">The entity comparer to use</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader.Parse(System.String)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class
            </summary>
            <param name="s">The header string to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader.Parse(System.String,FubarDev.WebDavServer.Model.Headers.EntityTagComparer)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class
            </summary>
            <param name="s">The header string to parse</param>
            <param name="etagComparer">The entity tag comparer used for the <see cref="M:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader.IsMatch(System.Nullable{FubarDev.WebDavServer.Model.Headers.EntityTag})"/> function</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class
            </summary>
            <param name="s">The header values to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader.Parse(System.Collections.Generic.IEnumerable{System.String},FubarDev.WebDavServer.Model.Headers.EntityTagComparer)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class
            </summary>
            <param name="s">The header values to parse</param>
            <param name="etagComparer">The entity tag comparer used for the <see cref="M:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader.IsMatch(System.Nullable{FubarDev.WebDavServer.Model.Headers.EntityTag})"/> function</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfNoneMatchHeader.IsMatch(System.Nullable{FubarDev.WebDavServer.Model.Headers.EntityTag})">
            <summary>
            Returns a value that indicates whether the <paramref name="etag"/> is not specified in the <c>If-None-Match</c> header
            </summary>
            <param name="etag">The entity tag to search for</param>
            <returns><see langword="true"/> when the <paramref name="etag"/> was not found</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.IfUnmodifiedSinceHeader">
            <summary>
            Class that represents the HTTP <c>If-Unmodified-Since</c> header
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfUnmodifiedSinceHeader.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfUnmodifiedSinceHeader"/> class.
            </summary>
            <param name="lastWriteTimeUtc">The last time the defination was changed</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.IfUnmodifiedSinceHeader.LastWriteTimeUtc">
            <summary>
            Gets the last time the definition was changed
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfUnmodifiedSinceHeader.Parse(System.String)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfUnmodifiedSinceHeader"/> class
            </summary>
            <param name="s">The header string to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.IfUnmodifiedSinceHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.IfUnmodifiedSinceHeader.IsMatch(System.DateTime)">
            <summary>
            Returns a value that indicates whether the <paramref name="lastWriteTimeUtc"/> is not past the value in the <c>If-Unmodified-Since</c> header
            </summary>
            <param name="lastWriteTimeUtc">The last write time of the entry to compare with</param>
            <returns><see langword="true"/> when the <paramref name="lastWriteTimeUtc"/> is not past the value in the <c>If-Modified-Since</c> header</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.LockTokenHeader">
            <summary>
            The <c>Lock-Token</c> header
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.LockTokenHeader.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.LockTokenHeader"/> class.
            </summary>
            <param name="stateToken">The lock token</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.LockTokenHeader.StateToken">
            <summary>
            Gets the lock token
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.LockTokenHeader.Parse(System.String)">
            <summary>
            Parses the header string to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.LockTokenHeader"/> class
            </summary>
            <param name="s">The header string to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.LockTokenHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.LockTokenHeader.ToString">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.NormalizedRangeItem">
            <summary>
            The normalized range item
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.NormalizedRangeItem.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.NormalizedRangeItem"/> struct.
            </summary>
            <param name="from">The start position from where the data will be read from/written to</param>
            <param name="to">The end position until which the data will be read from/written to</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.NormalizedRangeItem.From">
            <summary>
            Gets the start position
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.NormalizedRangeItem.To">
            <summary>
            Gets the end position
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.NormalizedRangeItem.Length">
            <summary>
            Gets the length of this range item
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.OverwriteHeader">
            <summary>
            The <c>Overwrite</c> header specific parsing functions
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.OverwriteHeader.Parse(System.String)">
            <summary>
            Parses the header string to get the value of the <c>Overwrite</c> header
            </summary>
            <param name="s">The header string to parse</param>
            <returns>The value of the <c>Overwrite</c> header</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.RangeHeader">
            <summary>
            This class encapsualtes a HTTP range
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.#ctor(System.String,FubarDev.WebDavServer.Model.Headers.RangeHeaderItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/> class.
            </summary>
            <param name="unit">The unit of the range (currently only <c>bytes</c> is allowed)</param>
            <param name="rangeItems">The HTTP range items for this range</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.RangeHeader.Unit">
            <summary>
            Gets the unit for this HTTP range
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.RangeHeader.RangeItems">
            <summary>
            Gets the HTTP range items
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.Parse(System.String)">
            <summary>
            Parses a <paramref name="range"/> into a new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/> instance
            </summary>
            <remarks>
            The range must be in the form <c>unit=(range)+</c>
            </remarks>
            <param name="range">The range to parse</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Parses the <paramref name="ranges"/> into a new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/> instance
            </summary>
            <remarks>
            The range must be in the form <c>unit=(range)+</c>
            </remarks>
            <param name="ranges">The ranges to parse</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeader"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.ToString">
            <summary>
            Returns the textual representation of this range.
            </summary>
            <remarks>
            The return value of this function can be parsed using <see cref="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.Parse(System.String)"/>.
            </remarks>
            <returns>The textual representation of this range</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.ToString(FubarDev.WebDavServer.Model.Headers.RangeHeaderItem)">
            <summary>
            Returns the textual representation of a single <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/>
            </summary>
            <remarks>
            The return value of this function looks like <c>unit range/length</c>
            </remarks>
            <param name="rangeItem">The <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/> to get the textual representation for</param>
            <returns>The textual representation of <paramref name="rangeItem"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.ToString(FubarDev.WebDavServer.Model.Headers.RangeHeaderItem,System.Nullable{System.Int64})">
            <summary>
            Returns the textual representation of a single <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/>
            </summary>
            <remarks>
            The return value of this function looks like <c>unit range/length</c>
            </remarks>
            <param name="rangeItem">The <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/> to get the textual representation for</param>
            <param name="length">The length value to be used in the textual representation</param>
            <returns>The textual representation of <paramref name="rangeItem"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeader.Normalize(System.Int64)">
            <summary>
            Normalize all byte ranges using the specified <paramref name="totalLength"/>
            </summary>
            <param name="totalLength">The length of the resource</param>
            <returns>The list of normalized byte ranges</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem">
            <summary>
            Range for a HTTP request or response
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/> struct.
            </summary>
            <param name="from">From byte</param>
            <param name="to">To byte</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.From">
            <summary>
            Gets the start position
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.To">
            <summary>
            Gets the end position
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.Parse(System.String)">
            <summary>
            Parses a <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/> from a string
            </summary>
            <remarks>
            Allowed are: "*", "from-", "-to", "from-to"
            </remarks>
            <param name="rangeItem">The string to parse</param>
            <returns>The new <see cref="T:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.ToString">
            <summary>
            Returns the textual representation of the HTTP range item
            </summary>
            <returns>the textual representation of the HTTP range item</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.RangeHeaderItem.Normalize(System.Int64)">
            <summary>
            Normalize this range header item
            </summary>
            <param name="totalLength">The total length to normalize this item with</param>
            <returns>The normalized range item</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Headers.TimeoutHeader">
            <summary>
            The HTTP <c>Timeout</c> header
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.TimeoutHeader.#ctor(System.Collections.Generic.IReadOnlyCollection{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.TimeoutHeader"/> class.
            </summary>
            <param name="values">The timeout values</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.TimeoutHeader.Infinite">
            <summary>
            Gets the timeout value for an infinite timeout
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Headers.TimeoutHeader.Values">
            <summary>
            Gets the timeout values of the <c>Timeout</c> header
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.TimeoutHeader.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Parses the header values to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.TimeoutHeader"/> class
            </summary>
            <param name="args">The header values to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Headers.TimeoutHeader"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Headers.TimeoutHeader.ToString">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Model.prop">
            <summary>
            The WebDAV prop element
            </summary>
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.prop.Language">
            <summary>
            Gets or sets the language code
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.prop.Any">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ReponseExtensions">
            <summary>
            Extensions for a <see cref="T:FubarDev.WebDavServer.Model.response"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.ReponseExtensions.GetHrefs(FubarDev.WebDavServer.Model.response)">
            <summary>
            Gets all <c>href</c> entries from a <see cref="T:FubarDev.WebDavServer.Model.response"/>
            </summary>
            <param name="response">The response to get the <c>href</c> values from</param>
            <returns>The list of found <c>href</c> values</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.Status">
            <summary>
            The WebDAV status line
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Status.#ctor(System.String,System.Net.HttpStatusCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Status"/> struct.
            </summary>
            <param name="protocol">The HTTP protocol (usually <c>HTTP/1.1</c>)</param>
            <param name="statusCode">The WebDAV status code</param>
            <param name="reasonPhrase">The status reason phrase</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Status.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Status"/> struct.
            </summary>
            <param name="protocol">The HTTP protocol (usually <c>HTTP/1.1</c>)</param>
            <param name="statusCode">The WebDAV status code</param>
            <param name="reasonPhrase">The status reason phrase</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Status.#ctor(System.String,FubarDev.WebDavServer.Model.WebDavStatusCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Status"/> struct.
            </summary>
            <param name="protocol">The HTTP protocol (usually <c>HTTP/1.1</c>)</param>
            <param name="statusCode">The WebDAV status code</param>
            <param name="additionalReasonPhrase">The additional text to the reason phrase</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Status.Protocol">
            <summary>
            Gets the HTTP protocol (usually <c>HTTP/1.1</c>)
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Status.StatusCode">
            <summary>
            Gets the status code
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Status.ReasonPhrase">
            <summary>
            Gets the <see cref="P:FubarDev.WebDavServer.Model.Status.StatusCode"/>s reason phrase
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.Status.IsSuccessStatusCode">
            <summary>
            Gets a value indicating whether the status code indicates success
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Status.Parse(System.String)">
            <summary>
            Parses the header value to get a new instance of the <see cref="T:FubarDev.WebDavServer.Model.Status"/> class
            </summary>
            <param name="status">The header value to parse</param>
            <returns>The new instance of the <see cref="T:FubarDev.WebDavServer.Model.Status"/> class</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.Status.ToString">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propfind">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propfind.Items">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propfind.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.location">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.location.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propstat">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.prop">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.status">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.error">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.responsedescription">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propstat.location">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.error">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.error.Items">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.error.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.errorLocktokensubmitted">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.errorLocktokensubmitted.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.errorNoconflictinglock">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.errorNoconflictinglock.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.Item">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.cannotmodifyprotectedproperty">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.locktokenmatchesrequesturi">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.locktokensubmitted">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.noconflictinglock">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.noexternalentities">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.preservedliveproperties">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType.propfindfinitedepth">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.include">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.include.Any">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.lockentry">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockentry.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockentry.locktype">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockscope.Item">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockscope.ItemElementName">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ItemChoiceType">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemChoiceType.exclusive">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemChoiceType.shared">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.locktype">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.locktype.Item">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.lockroot">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockroot.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.locktoken">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.locktoken.href">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.activelock">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.locktype">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.depth">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.owner">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.timeout">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.locktoken">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.activelock.lockroot">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.activelockDepth">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.activelockDepth.Item0">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.activelockDepth.Item1">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.activelockDepth.infinity">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propset">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propset.prop">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propremove">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propremove.prop">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ItemsChoiceType1">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType1.allprop">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType1.include">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType1.prop">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType1.propname">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.multistatus">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.multistatus.response">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.multistatus.responsedescription">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.response">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.href">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.Items">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.error">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.response.responsedescription">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.ItemsChoiceType2">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType2.href">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType2.propstat">
            <remarks/>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.ItemsChoiceType2.status">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.propertyupdate">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.propertyupdate.Items">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.lockinfo">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockinfo.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockinfo.locktype">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.lockinfo.owner">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.supportedlock">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.supportedlock.lockentry">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.supportedlockLockentry">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.supportedlockLockentry.lockscope">
            <remarks/>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.supportedlockLockentry.locktype">
            <remarks/>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.WebDavStatusCode">
            <summary>
            The status codes used by the WebDAV server
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.OK">
            <summary>
            The <c>OK</c> (200) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.Created">
            <summary>
            The <c>Created</c> (201) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.NoContent">
            <summary>
            The <c>No Content</c> (204) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.PartialContent">
            <summary>
            The <c>Partial Content</c> (206) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.MultiStatus">
            <summary>
            The <c>Multi-Status</c> (207) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.NotModified">
            <summary>
            The <c>Not Modified</c> (304) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.BadRequest">
            <summary>
            The <c>Bad Request</c> (400) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.Forbidden">
            <summary>
            The <c>Forbidden</c> (403) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.NotFound">
            <summary>
            The <c>Not Found</c> (404) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.MethodNotAllowed">
            <summary>
            The <c>Method Not Allowed</c> (405) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.Conflict">
            <summary>
            The <c>Conflict</c> (409) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.PreconditionFailed">
            <summary>
            The <c>Precondition Failed</c> (412) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.RequestUriTooLong">
            <summary>
            The <c>Request URI Too Long</c> (414) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.UnsupportedMediaType">
            <summary>
            The <c>Unsupported Media Type</c> (415) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.RequestedRangeNotSatisfiable">
            <summary>
            The <c>Requested Range Not Satisfiable</c> (416) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.UnprocessableEntity">
            <summary>
            The <c>Unprocessable Entity</c> (422) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.Locked">
            <summary>
            The <c>Locked</c> (423) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.FailedDependency">
            <summary>
            The <c>Failed Dependency</c> (424) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.NotImplemented">
            <summary>
            The <c>Not Implemented</c> (501) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.BadGateway">
            <summary>
            The <c>Bad Gateway</c> (502) status code
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Model.WebDavStatusCode.InsufficientStorage">
            <summary>
            The <c>Insufficient Storage</c> (507) status code
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.WebDavStatusCodeExtensions">
            <summary>
            Extension methods for the <see cref="T:FubarDev.WebDavServer.Model.WebDavStatusCode"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Model.WebDavStatusCodeExtensions.GetReasonPhrase(FubarDev.WebDavServer.Model.WebDavStatusCode,System.String)">
            <summary>
            Builds the reason phrase for a status code and an additional message
            </summary>
            <param name="statusCode">The status code to build the reason phrase for</param>
            <param name="additionalMessage">The additional message for the reason phrase</param>
            <returns>The built reason phrase</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Model.WebDavXml">
            <summary>
            Utility properties for the WebDAV XML
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Model.WebDavXml.Dav">
            <summary>
            Gets the WebDAV namespace
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_ArrayLengthsDiffer">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Array lengths must be the same. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_ArrayPlusOffTooSmall">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Destination array is not long enough to copy all the items in the collection. Check array index and length. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_BitArrayTypeUnsupported">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Only supported array types for CopyTo on BitArrays are Boolean[], Int32[] and Byte[]. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_HSCapacityOverflow">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die HashSet capacity is too big. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_HTCapacityOverflow">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Hashtable&apos;s capacity overflowed and went negative. Check load factor, capacity and the current size of the table. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_InsufficientSpace">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Insufficient space in the target location to copy the information. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_MultiRank">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Multi dimension array is not supported on this operation. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_NonZeroLowerBound">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The lower bound of target array must be zero. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_RankMultiDimNotSupported">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Only single dimensional arrays are supported for the requested action. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Arg_WrongType">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The value &apos;{0}&apos; is not of type &apos;{1}&apos; and cannot be used in this generic collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_AddingDuplicate">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die An item with the same key has already been added. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_ArrayTooLarge">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The input array length must not exceed Int32.MaxValue / {0}. Otherwise BitArray.Length would exceed Int32.MaxValue. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_ImplementIComparable">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die At least one object must implement IComparable. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_InvalidArgumentForComparison">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Type of argument is not compatible with the generic comparer. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_InvalidArrayType">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Target array type is not compatible with the type of items in the collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Argument_InvalidOffLen">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_BiggerThanCollection">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Larger than collection size. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_Count">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Count must be positive and count must refer to a location within the string/array/collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_Index">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Index was out of range. Must be non-negative and less than the size of the collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_ListInsert">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Index must be within the bounds of the List. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_NeedNonNegNum">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Non-negative number required. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_NeedNonNegNumRequired">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Non-negative number required. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ArgumentOutOfRange_SmallCapacity">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die capacity was less than the current size. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.CopyTo_ArgumentsTooSmall">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Destination array is not long enough to copy all the items in the collection. Check array index and length. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Create_TValueCollectionReadOnly">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The specified TValueCollection creates collections that have IsReadOnly set to true by default. TValueCollection must be a mutable ICollection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ExternalLinkedListNode">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The LinkedList node does not belong to current LinkedList. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.IndexOutOfRange">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Index {0} is out of range. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.Invalid_Array_Type">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Target array type is not compatible with the type of items in the collection. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EmptyQueue">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Queue empty. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EmptyStack">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Stack empty. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EnumEnded">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Enumeration already finished. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EnumFailedVersion">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Collection was modified; enumeration operation may not execute. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EnumNotStarted">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Enumeration has not started. Call MoveNext. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.InvalidOperation_EnumOpCantHappen">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Enumeration has either not started or has already finished. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.LinkedListEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The LinkedList is empty. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.LinkedListNodeIsAttached">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The LinkedList node already belongs to a LinkedList. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.NotSupported_KeyCollectionSet">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Mutating a key collection derived from a dictionary is not allowed. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.NotSupported_SortedListNestedWrite">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die This operation is not supported on SortedList nested types because they require modifying the original SortedList. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.NotSupported_ValueCollectionSet">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Mutating a value collection derived from a dictionary is not allowed. ähnelt.
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Properties.Resources.ReadOnly_Modification">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The collection is read-only ähnelt.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Converters.DateTimeOffsetIso8601Converter">
            <summary>
            Converts a <see cref="T:System.DateTimeOffset"/> to/from a timestamp in ISO-8601 format.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.DateTimeOffsetIso8601Converter.Parse(System.String)">
            <summary>
            Parses a string as a ISO 8601 date
            </summary>
            <param name="s">The string to parse</param>
            <returns>The parsed date</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.DateTimeOffsetIso8601Converter.IsValidValue(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.DateTimeOffsetIso8601Converter.FromElement(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.DateTimeOffsetIso8601Converter.ToElement(System.Xml.Linq.XName,System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Converters.DateTimeRfc1123Converter">
            <summary>
            A property converter for RFC 1123 dates
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.DateTimeRfc1123Converter.Parse(System.String)">
            <summary>
            Parses a string with a RFC 1123 date
            </summary>
            <param name="s">The string to parse</param>
            <returns>The parsed date</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.DateTimeRfc1123Converter.FromElement(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.DateTimeRfc1123Converter.ToElement(System.Xml.Linq.XName,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.DateTimeRfc1123Converter.IsValidValue(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Converters.EntityTagConverter">
            <summary>
            Property converter for an <see cref="T:FubarDev.WebDavServer.Model.Headers.EntityTag"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.EntityTagConverter.FromElement(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.EntityTagConverter.ToElement(System.Xml.Linq.XName,FubarDev.WebDavServer.Model.Headers.EntityTag)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.EntityTagConverter.IsValidValue(FubarDev.WebDavServer.Model.Headers.EntityTag)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Converters.IPropertyConverter`1">
            <summary>
            The property converter interface
            </summary>
            <typeparam name="T">The type to convert to/from an <see cref="T:System.Xml.Linq.XElement"/></typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.IPropertyConverter`1.IsValidValue(`0)">
            <summary>
            Determines whether the value is valid
            </summary>
            <param name="value">The value to validate</param>
            <returns><see langword="true"/> when the <paramref name="value"/> is valid</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.IPropertyConverter`1.FromElement(System.Xml.Linq.XElement)">
            <summary>
            Convert to the type <typeparamref name="T"/> from a given <paramref name="element"/>
            </summary>
            <param name="element">The <see cref="T:System.Xml.Linq.XElement"/> to extract the value from</param>
            <returns>The value extracted from the <paramref name="element"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.IPropertyConverter`1.ToElement(System.Xml.Linq.XName,`0)">
            <summary>
            Covert from a given <paramref name="value"/> to an <see cref="T:System.Xml.Linq.XElement"/>
            </summary>
            <param name="name">The name of the <see cref="T:System.Xml.Linq.XElement"/> to be created</param>
            <param name="value">The value to be converted to an <see cref="T:System.Xml.Linq.XElement"/></param>
            <returns>The created <see cref="T:System.Xml.Linq.XElement"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Converters.LongConverter">
            <summary>
            Converter between <see cref="T:System.Xml.Linq.XElement"/> and <see langword="long"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.LongConverter.FromElement(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.LongConverter.ToElement(System.Xml.Linq.XName,System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.LongConverter.IsValidValue(System.Int64)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Converters.StringConverter">
            <summary>
            Property converter for a <see langword="string"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.StringConverter.FromElement(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.StringConverter.ToElement(System.Xml.Linq.XName,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.StringConverter.IsValidValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Converters.XmlConverter`1">
            <summary>
            Property converter for an object to be de-/serialized by a <see cref="T:System.Xml.Serialization.XmlSerializer"/>
            </summary>
            <typeparam name="T">The type of the object to be de-/serialized</typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.XmlConverter`1.FromElement(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.XmlConverter`1.ToElement(System.Xml.Linq.XName,`0)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Converters.XmlConverter`1.IsValidValue(`0)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Dead.DeadProperty">
            <summary>
            The generic dead property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadProperty.#ctor(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Dead.DeadProperty"/> class.
            </summary>
            <param name="store">The property store for the dead properties</param>
            <param name="entry">The file system entry</param>
            <param name="name">The XML name of the dead property</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadProperty.#ctor(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Dead.DeadProperty"/> class.
            </summary>
            <param name="store">The property store for the dead properties</param>
            <param name="entry">The file system entry</param>
            <param name="element">The element to intialize this property with</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.DeadProperty.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.DeadProperty.Language">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.DeadProperty.AlternativeNames">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.DeadProperty.Cost">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadProperty.SetXmlValueAsync(System.Xml.Linq.XElement,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadProperty.GetXmlValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadProperty.IsDefaultValue(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadProperty.Init(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Dead.DeadPropertyFactory">
            <summary>
            A factory for the creation of dead properties
            </summary>
            <remarks>
            Some dead properties are special (like the <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/>), because they have custom implementations.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadPropertyFactory.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Dead.DeadPropertyFactory"/> class.
            </summary>
            <param name="serviceProvider">The service provider used to query the <see cref="T:FubarDev.WebDavServer.Dispatchers.IWebDavClass"/> implementations</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadPropertyFactory.Create(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DeadPropertyFactory.Create(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Dead.DisplayNameProperty">
            <summary>
            The <c>displayname</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Dead.DisplayNameProperty.PropertyName">
            <summary>
            The XML name of the property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DisplayNameProperty.#ctor(FubarDev.WebDavServer.FileSystem.IEntry,FubarDev.WebDavServer.Props.Store.IPropertyStore,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Dead.DisplayNameProperty"/> class.
            </summary>
            <param name="entry">The entry to instantiate this property for</param>
            <param name="store">The property store to store this property</param>
            <param name="hideExtension">Hide the extension from the display name</param>
            <param name="cost">The cost of querying the display names property</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DisplayNameProperty.GetValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DisplayNameProperty.SetValueAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DisplayNameProperty.Init(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.DisplayNameProperty.IsDefaultValue(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty">
            <summary>
            The implementation of the <c>getcontentlanguage</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty.PropertyName">
            <summary>
            The XML name of the property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty.#ctor(FubarDev.WebDavServer.FileSystem.IEntry,FubarDev.WebDavServer.Props.Store.IPropertyStore,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty"/> class.
            </summary>
            <param name="entry">The entry to instantiate this property for</param>
            <param name="store">The property store to store this property</param>
            <param name="defaultContentLanguage">The content language to return when none was specified</param>
            <param name="cost">The cost of querying the display names property</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty.TryGetValueAsync(System.Threading.CancellationToken)">
            <summary>
            Tries to get the value of this property
            </summary>
            <param name="ct">The cancellation token</param>
            <returns>A tuple where the first item indicates whether the value was read from the property store and
            the second item is the value to be returned as value for this property</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty.GetValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty.SetValueAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty.Init(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentLanguageProperty.IsDefaultValue(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Dead.GetContentTypeProperty">
            <summary>
            The implementation of the <c>getcontenttype</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Dead.GetContentTypeProperty.PropertyName">
            <summary>
            The XML name of the property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentTypeProperty.#ctor(FubarDev.WebDavServer.FileSystem.IEntry,FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.IMimeTypeDetector,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Dead.GetContentTypeProperty"/> class.
            </summary>
            <param name="entry">The entry to instantiate this property for</param>
            <param name="store">The property store to store this property</param>
            <param name="mimeTypeDetector">The mime type detector</param>
            <param name="cost">The cost of querying the display names property</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentTypeProperty.GetValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentTypeProperty.SetValueAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentTypeProperty.Init(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetContentTypeProperty.IsDefaultValue(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty">
            <summary>
            The implementation of the <c>getetag</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Dead.GetETagProperty.PropertyName">
            <summary>
            The XML name of the property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetETagProperty.#ctor(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> class.
            </summary>
            <param name="propertyStore">The property store to store this property</param>
            <param name="entry">The entry to instantiate this property for</param>
            <param name="cost">The cost of querying the display names property</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.GetETagProperty.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.GetETagProperty.Language">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.GetETagProperty.AlternativeNames">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.GetETagProperty.Cost">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Dead.GetETagProperty.Converter">
            <summary>
            Gets the entity tag converter
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetETagProperty.GetXmlValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetETagProperty.Init(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetETagProperty.GetValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.GetETagProperty.IsDefaultValue(System.Xml.Linq.XElement)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Dead.IDeadProperty">
            <summary>
            The interface for a dead (read-only) property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.IDeadProperty.IsDefaultValue(System.Xml.Linq.XElement)">
            <summary>
            Determines if the returned value is the default value and therefore doesn't need to be copied.
            </summary>
            <param name="element">The element with the value to check if it has the default value</param>
            <returns><see langword="true"/> when the underlying is not the default value</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Dead.IDeadPropertyFactory">
            <summary>
            The interface for a dead property factory
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.IDeadPropertyFactory.Create(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName)">
            <summary>
            Creates a new dead property instance
            </summary>
            <param name="store">The property store to store this property</param>
            <param name="entry">The entry to instantiate this property for</param>
            <param name="name">The name of the dead property to create</param>
            <returns>The created dead property instance</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Dead.IDeadPropertyFactory.Create(FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XElement)">
            <summary>
            Creates a new dead property instance
            </summary>
            <param name="store">The property store to store this property</param>
            <param name="entry">The entry to instantiate this property for</param>
            <param name="element">The element to intialize the dead property with</param>
            <returns>The created dead property instance</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.DefaultEntryPropertyInitializer">
            <summary>
            The default implementation of a <see cref="T:FubarDev.WebDavServer.Props.IEntryPropertyInitializer"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.DefaultEntryPropertyInitializer.CreatePropertiesAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.IWebDavContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.DefaultEntryPropertyInitializer.CreatePropertiesAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.IWebDavContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.DefaultEntryPropertyInitializer.CreateGenericPropertiesAsync(FubarDev.WebDavServer.FileSystem.IEntry,FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.IWebDavContext,System.Threading.CancellationToken)">
            <summary>
            Create generic property
            </summary>
            <param name="entry">The entry to create the properties for</param>
            <param name="propertyStore">The property store</param>
            <param name="context">The PUT/MKCOL request context</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The task</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.EntryExtensions">
            <summary>
            Extension methods for an <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.EntryExtensions.GetResourceTypeProperty(FubarDev.WebDavServer.FileSystem.IEntry)">
            <summary>
            Gets the default resource type for the given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to get the resource type property for</param>
            <returns>The resource type property</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.EntryProperties">
            <summary>
            The asynchronously enumerable properties for a <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.EntryProperties.#ctor(FubarDev.WebDavServer.FileSystem.IEntry,System.Collections.Generic.IEnumerable{FubarDev.WebDavServer.Props.IUntypedReadableProperty},FubarDev.WebDavServer.Props.Store.IPropertyStore,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.EntryProperties"/> class.
            </summary>
            <param name="entry">The entry whose properties are to enumerate</param>
            <param name="predefinedProperties">The predefined properties for the entry</param>
            <param name="propertyStore">The property store to get the remaining dead properties for</param>
            <param name="maxCost">The maximum cost of the properties to return</param>
            <param name="returnInvalidProperties">Do we want to get invalid live properties?</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.EntryProperties.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Filters.CostFilter">
            <summary>
            Filters a property by its cost to query its value.
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.CostFilter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Filters.CostFilter"/> class.
            </summary>
            <param name="maximumCost">The maximum allowed cost</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.CostFilter.#ctor(System.Int32,FubarDev.WebDavServer.Props.Filters.IPropertyFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Filters.CostFilter"/> class.
            </summary>
            <param name="maximumCost">The maximum allowed cost</param>
            <param name="exceptionFilter">A filter that allows an exception to this rule</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.CostFilter.Reset">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.CostFilter.IsAllowed(FubarDev.WebDavServer.Props.IProperty)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.CostFilter.NotifyOfSelection(FubarDev.WebDavServer.Props.IProperty)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.CostFilter.GetMissingProperties">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Filters.IPropertyFilter">
            <summary>
            An interface to filter the properties to be returned
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.IPropertyFilter.Reset">
            <summary>
            Reset the status of the filter
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.IPropertyFilter.IsAllowed(FubarDev.WebDavServer.Props.IProperty)">
            <summary>
            Does this property pass the conditions of this filter?
            </summary>
            <param name="property">The property to test</param>
            <returns><see langword="true"/> when the property passes this filters condition(s)</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.IPropertyFilter.NotifyOfSelection(FubarDev.WebDavServer.Props.IProperty)">
            <summary>
            Notify this filter when this property was selected
            </summary>
            <param name="property">The property that was selected</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.IPropertyFilter.GetMissingProperties">
            <summary>
            Gets the properties that weren't selected
            </summary>
            <returns>The list of properties that weren't selected</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Filters.MissingProperty">
            <summary>
            Information about a property that wasn't selected for a PROPFIND
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.MissingProperty.#ctor(FubarDev.WebDavServer.Model.WebDavStatusCode,System.Xml.Linq.XName)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Filters.MissingProperty"/> class.
            </summary>
            <param name="statusCode">The status code why this property wasn't selected</param>
            <param name="propertyName">The name of the property that wasn't selected</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Filters.MissingProperty.StatusCode">
            <summary>
            Gets the status code of the reason why this property wasn't selected
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Filters.MissingProperty.Key">
            <summary>
            Gets the name of the property that wasn't selected
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Filters.PropFilter">
            <summary>
            Filters the allowed properties by name
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.PropFilter.#ctor(FubarDev.WebDavServer.Model.prop)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Filters.PropFilter"/> class.
            </summary>
            <param name="prop">The <see cref="T:FubarDev.WebDavServer.Model.prop"/> element containing the property names</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.PropFilter.Reset">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.PropFilter.IsAllowed(FubarDev.WebDavServer.Props.IProperty)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.PropFilter.NotifyOfSelection(FubarDev.WebDavServer.Props.IProperty)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.PropFilter.GetMissingProperties">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Filters.ReadableFilter">
            <summary>
            Implementation of a property filter that allows only readable properties
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.ReadableFilter.Reset">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.ReadableFilter.IsAllowed(FubarDev.WebDavServer.Props.IProperty)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.ReadableFilter.NotifyOfSelection(FubarDev.WebDavServer.Props.IProperty)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Filters.ReadableFilter.GetMissingProperties">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Generic.GenericDateTimeOffsetIso8601Property">
            <summary>
            A dead property with a ISO 8601 date
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Generic.GenericDateTimeOffsetIso8601Property.#ctor(System.Xml.Linq.XName,System.Int32,FubarDev.WebDavServer.Props.GetPropertyValueAsyncDelegate{System.DateTimeOffset},FubarDev.WebDavServer.Props.SetPropertyValueAsyncDelegate{System.DateTimeOffset},System.Xml.Linq.XName[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Generic.GenericDateTimeOffsetIso8601Property"/> class.
            </summary>
            <param name="name">The property name</param>
            <param name="cost">The cost to query the properties value</param>
            <param name="getValueAsyncFunc">The function to get the property value</param>
            <param name="setValueAsyncFunc">The function to set the property value</param>
            <param name="alternativeNames">Alternative property names</param>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Generic.GenericDateTimeRfc1123Property">
            <summary>
            A dead property with a RFC 1123 date
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Generic.GenericDateTimeRfc1123Property.#ctor(System.Xml.Linq.XName,System.Int32,FubarDev.WebDavServer.Props.GetPropertyValueAsyncDelegate{System.DateTime},FubarDev.WebDavServer.Props.SetPropertyValueAsyncDelegate{System.DateTime},System.Xml.Linq.XName[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Generic.GenericDateTimeRfc1123Property"/> class.
            </summary>
            <param name="name">The property name</param>
            <param name="cost">The cost to query the properties value</param>
            <param name="getValueAsyncFunc">The function to get the property value</param>
            <param name="setValueAsyncFunc">The function to set the property value</param>
            <param name="alternativeNames">Alternative property names</param>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Generic.GenericProperty`1">
            <summary>
            A generic typed property
            </summary>
            <typeparam name="T">The underlying property value type</typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Generic.GenericProperty`1.#ctor(System.Xml.Linq.XName,System.String,System.Int32,FubarDev.WebDavServer.Props.Converters.IPropertyConverter{`0},FubarDev.WebDavServer.Props.GetPropertyValueAsyncDelegate{`0},FubarDev.WebDavServer.Props.SetPropertyValueAsyncDelegate{`0},System.Xml.Linq.XName[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Generic.GenericProperty`1"/> class.
            </summary>
            <param name="name">The property name</param>
            <param name="language">The language for the property value</param>
            <param name="cost">The cost to query the properties value</param>
            <param name="converter">The converter to convert to/from the underlying property value</param>
            <param name="getValueAsyncFunc">The function to get the property value</param>
            <param name="setValueAsyncFunc">The function to set the property value</param>
            <param name="alternativeNames">Alternative property names</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Generic.GenericProperty`1.GetValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Generic.GenericProperty`1.SetValueAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Generic.GenericStringProperty">
            <summary>
            A dead property with a string value
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Generic.GenericStringProperty.#ctor(System.Xml.Linq.XName,System.String,System.Int32,FubarDev.WebDavServer.Props.GetPropertyValueAsyncDelegate{System.String},FubarDev.WebDavServer.Props.SetPropertyValueAsyncDelegate{System.String},System.Xml.Linq.XName[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Generic.GenericStringProperty"/> class.
            </summary>
            <param name="name">The property name</param>
            <param name="language">The language for the property value</param>
            <param name="cost">The cost to query the properties value</param>
            <param name="getValueAsyncFunc">The function to get the property value</param>
            <param name="setValueAsyncFunc">The function to set the property value</param>
            <param name="alternativeNames">Alternative property names</param>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.GetPropertyValueAsyncDelegate`1">
            <summary>
            A delegate for asynchronously getting a dead properties value.
            </summary>
            <typeparam name="T">The type of the dead properties value</typeparam>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The underlying property value</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.IEntryPropertyInitializer">
            <summary>
            Initzialize a newly created document or collection with properties
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.IEntryPropertyInitializer.CreatePropertiesAsync(FubarDev.WebDavServer.FileSystem.IDocument,FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.IWebDavContext,System.Threading.CancellationToken)">
            <summary>
            Initialize a new document with properties
            </summary>
            <param name="document">The document to create the properties for</param>
            <param name="propertyStore">The property store</param>
            <param name="context">The PUT request context</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>the task</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.IEntryPropertyInitializer.CreatePropertiesAsync(FubarDev.WebDavServer.FileSystem.ICollection,FubarDev.WebDavServer.Props.Store.IPropertyStore,FubarDev.WebDavServer.IWebDavContext,System.Threading.CancellationToken)">
            <summary>
            Initialize a new collection with properties
            </summary>
            <param name="collection">The collection to create the properties for</param>
            <param name="propertyStore">The property store</param>
            <param name="context">The MKCOL request context</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>the task</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.IInitializableProperty">
            <summary>
            A property that can be initialized with a <see cref="T:System.Xml.Linq.XElement"/>
            </summary>
            <remarks>
            This avoids the (propably costly) fetching of the properties value.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.IInitializableProperty.Init(System.Xml.Linq.XElement)">
            <summary>
            Initialize the property with an <see cref="T:System.Xml.Linq.XElement"/>
            </summary>
            <param name="initialValue">The element to intialize the property with</param>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.IProperty">
            <summary>
            The base property interface
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.IProperty.Name">
            <summary>
            Gets the XML name of the property
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.IProperty.Language">
            <summary>
            Gets the language of this property value
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.IProperty.AlternativeNames">
            <summary>
            Gets the alternative XML names
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.ITypedReadableProperty`1">
            <summary>
            An interface for a typed readable property
            </summary>
            <typeparam name="T">The underlying type of the <see cref="T:System.Xml.Linq.XElement"/></typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.ITypedReadableProperty`1.GetValueAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the underlying typed value
            </summary>
            <param name="ct">The cancellation token</param>
            <returns>The underlying typed value</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.ITypedWriteableProperty`1">
            <summary>
            A typed writeable property
            </summary>
            <typeparam name="T">The underlying type of the <see cref="T:System.Xml.Linq.XElement"/></typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.ITypedWriteableProperty`1.SetValueAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Sets the underlying typed value
            </summary>
            <param name="value">The value to set</param>
            <param name="ct">The cancellation token</param>
            <returns>the async task</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.IUntypedReadableProperty">
            <summary>
            The interface for an untyped readable property
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.IUntypedReadableProperty.Cost">
            <summary>
            Gets the cost of reading the property value
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.IUntypedReadableProperty.GetXmlValueAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XElement"/> for this property
            </summary>
            <param name="ct">The cancellation token</param>
            <returns>The <see cref="T:System.Xml.Linq.XElement"/> for this property</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.IUntypedWriteableProperty">
            <summary>
            The interface for an untyped writeable property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.IUntypedWriteableProperty.SetXmlValueAsync(System.Xml.Linq.XElement,System.Threading.CancellationToken)">
            <summary>
            Sets the <see cref="T:System.Xml.Linq.XElement"/> for the property
            </summary>
            <param name="element">The <see cref="T:System.Xml.Linq.XElement"/> to be set</param>
            <param name="ct">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Live.ContentLengthProperty">
            <summary>
            The <c>getcontentlength</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.PropertyName">
            <summary>
            The XML property name
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Live.ContentLengthProperty"/> class.
            </summary>
            <param name="propValue">The initial value</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.Language">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.AlternativeNames">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.Cost">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.IsValidAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.GetXmlValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ContentLengthProperty.GetValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Live.CreationDateProperty">
            <summary>
            The <c>creationdate</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Live.CreationDateProperty.PropertyName">
            <summary>
            The XML property name
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.CreationDateProperty.#ctor(System.DateTimeOffset,FubarDev.WebDavServer.Props.SetPropertyValueAsyncDelegate{System.DateTimeOffset})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Live.CreationDateProperty"/> class.
            </summary>
            <param name="propValue">The initial property value</param>
            <param name="setValueAsyncFunc">The delegate to set the value asynchronously</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.CreationDateProperty.IsValidAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Live.ILiveProperty">
            <summary>
            The interface for a live property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ILiveProperty.IsValidAsync(System.Threading.CancellationToken)">
            <summary>
            Determines whether the underlying value is valid
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns><see langword="true"/> when the underlying is valid</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Live.LastModifiedProperty">
            <summary>
            The <c>getlastmodified</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Live.LastModifiedProperty.PropertyName">
            <summary>
            The XML name of the property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.LastModifiedProperty.#ctor(System.DateTime,FubarDev.WebDavServer.Props.SetPropertyValueAsyncDelegate{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Live.LastModifiedProperty"/> class.
            </summary>
            <param name="propValue">The initial property value</param>
            <param name="setValueAsyncFunc">The delegate to set the value asynchronously</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.LastModifiedProperty.IsValidAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty">
            <summary>
            The <c>lockdiscovery</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.PropertyName">
            <summary>
            The XML property name
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.#ctor(FubarDev.WebDavServer.FileSystem.IEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty"/> class.
            </summary>
            <param name="entry">The file system entry</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.Language">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.AlternativeNames">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.Cost">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.IsValidAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.GetXmlValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.LockDiscoveryProperty.GetXmlValueAsync(System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get the XML value asynchronously
            </summary>
            <param name="omitOwner">Do we want to omit the owner?</param>
            <param name="omitToken">Do we want to omit the lock token?</param>
            <param name="ct">The cancellation token</param>
            <returns>The XML value</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty">
            <summary>
            The <c>resourcetype</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.PropertyName">
            <summary>
            Gets the XML property name
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty"/> class.
            </summary>
            <param name="element">The element of this resource type</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.Language">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.AlternativeNames">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.Cost">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.GetDocumentResourceType">
            <summary>
            Returns a new document resource type property
            </summary>
            <returns>a new document resource type property</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.GetCollectionResourceType">
            <summary>
            Returns a new collection resource type property
            </summary>
            <returns>a new collection resource type property</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.IsValidAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.ResourceTypeProperty.GetXmlValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Live.SupportedLockProperty">
            <summary>
            The <c>supportedlock</c> property
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.PropertyName">
            <summary>
            The XML name of the property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.#ctor(FubarDev.WebDavServer.FileSystem.IEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Live.SupportedLockProperty"/> class.
            </summary>
            <param name="entry">The file system entry this property is for</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.Language">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.AlternativeNames">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.Cost">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.IsValidAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.GetXmlValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Live.SupportedLockProperty.GetValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.SetPropertyValueAsyncDelegate`1">
            <summary>
            The delegate to set a typed properties value
            </summary>
            <typeparam name="T">The type of the value to set</typeparam>
            <param name="value">The value to set</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.SimpleConvertingProperty`1">
            <summary>
            Simple converting property
            </summary>
            <typeparam name="T">The type to be converted from or to</typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleConvertingProperty`1.#ctor(System.Xml.Linq.XName,System.String,System.Int32,FubarDev.WebDavServer.Props.Converters.IPropertyConverter{`0},System.Xml.Linq.XName[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.SimpleConvertingProperty`1"/> class.
            </summary>
            <param name="name">The property name</param>
            <param name="language">The language for the property value</param>
            <param name="cost">The cost to get the properties value</param>
            <param name="converter">The converter to copy the value to/from an <see cref="T:System.Xml.Linq.XElement"/></param>
            <param name="alternativeNames">The alternative names</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.SimpleConvertingProperty`1.Converter">
            <summary>
            Gets the converter to be used to copy to/from an <see cref="T:System.Xml.Linq.XElement"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleConvertingProperty`1.GetXmlValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleConvertingProperty`1.SetXmlValueAsync(System.Xml.Linq.XElement,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.SimpleTypedProperty`1">
            <summary>
            A simple typed writeable property
            </summary>
            <typeparam name="T">The type to be converted from or to</typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleTypedProperty`1.#ctor(System.Xml.Linq.XName,System.String,System.Int32,System.Xml.Linq.XName[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.SimpleTypedProperty`1"/> class.
            </summary>
            <param name="name">The property name</param>
            <param name="language">The language for the property value</param>
            <param name="cost">The cost to get the properties value</param>
            <param name="alternativeNames">The alternative names</param>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleTypedProperty`1.GetValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleTypedProperty`1.SetValueAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.SimpleUntypedProperty">
            <summary>
            A simple writeable untyped property
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleUntypedProperty.#ctor(System.Xml.Linq.XName,System.String,System.Int32,System.Xml.Linq.XName[])">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.SimpleUntypedProperty"/> class.
            </summary>
            <param name="name">The property name</param>
            <param name="language">The language for the property value</param>
            <param name="cost">The cost to get the properties value</param>
            <param name="alternativeNames">The alternative names</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.SimpleUntypedProperty.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.SimpleUntypedProperty.Language">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.SimpleUntypedProperty.AlternativeNames">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.SimpleUntypedProperty.Cost">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleUntypedProperty.SetXmlValueAsync(System.Xml.Linq.XElement,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.SimpleUntypedProperty.GetXmlValueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Store.IFileSystemPropertyStore">
            <summary>
            Interface for a property store that stores the properties on the local file system
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IFileSystemPropertyStore.IgnoreEntry(FubarDev.WebDavServer.FileSystem.IEntry)">
            <summary>
            Determines whether the given <paramref name="entry"/> should be ignored when the client performs a PROPFIND
            </summary>
            <param name="entry">The entry that needs to be checked if it should be ignored</param>
            <returns><see langword="true"/> when the entry should be ignored</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Store.IPropertyStore">
            <summary>
            The interface a property store (for dead properties) must implement
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Store.IPropertyStore.Cost">
            <summary>
            Gets the cost to query the properties of a property store
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.GetAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,System.Threading.CancellationToken)">
            <summary>
            Gets a dead property with the given <paramref name="name"/> for the given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to get the property with the given <paramref name="name"/> for</param>
            <param name="name">The name of the parameter to get for a given <paramref name="entry"/></param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:System.Xml.Linq.XElement"/> for the given dead property</returns>
            <remarks>A <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> will not be returned by this function.</remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.SetAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XElement,System.Threading.CancellationToken)">
            <summary>
            Sets a dead property for the given <paramref name="entry"/> to the given <paramref name="element"/>
            </summary>
            <param name="entry">The entry to set the property <paramref name="element"/> for</param>
            <param name="element">The element to set the <paramref name="entry"/> for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
            <remarks>A <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> cannot be updated by this function.</remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.RemoveAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,System.Threading.CancellationToken)">
            <summary>
            Removes a dead property with a given <paramref name="name"/> from the given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to remove the dead property with the given <paramref name="name"/> from</param>
            <param name="name">The name of the parameter to remove from the <paramref name="entry"/></param>
            <param name="cancellationToken">The cancellation token</param>
            <returns><see langword="true"/> when there was a dead property with the given <paramref name="name"/> that could be removed</returns>
            <remarks>A <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> cannot be removed by this function.</remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.GetAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <summary>
            Gets all dead properties for a given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to get all the dead properties for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The collection of all dead properties</returns>
            <remarks>A <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> will not be returned by this function.</remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.SetAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Threading.CancellationToken)">
            <summary>
            Sets all given dead <paramref name="properties"/> for the given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to set all the dead <paramref name="properties"/> for</param>
            <param name="properties">The properties to set for the given <paramref name="entry"/></param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
            <remarks>A <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> cannot be updated using this method</remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.RemoveAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Collections.Generic.IEnumerable{System.Xml.Linq.XName},System.Threading.CancellationToken)">
            <summary>
            Remove multiple dead properties by its name at once from the given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to remove the given property <paramref name="names"/> from</param>
            <param name="names">The names of the dead properties to remove from the given <paramref name="entry"/></param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A collection of booleans where a <see langword="true"/> value indicates that there was a dead property for a given
            name that could be removed from the <paramref name="entry"/>. A <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> cannot be removed
            by this function.</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.RemoveAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <summary>
            Remove all dead propertied (including a probably exting <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/>) from a given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to remove all the dead properties from</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The async task</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.Create(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName)">
            <summary>
            Creates a dead property by its <paramref name="name"/> for a given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to create the dead property with the given <paramref name="name"/> for</param>
            <param name="name">The name of the dead property to create for the given <paramref name="entry"/> for</param>
            <returns>The created dead property with the given <paramref name="name"/> for the given <paramref name="entry"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.LoadAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,System.Threading.CancellationToken)">
            <summary>
            Loads the dead property with the given <paramref name="name"/> into a <see cref="T:FubarDev.WebDavServer.Props.Dead.IDeadProperty"/> implementation
            </summary>
            <param name="entry">The entry to load the dead property for</param>
            <param name="name">The name of the dead property</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The implementation of the dead property</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.LoadAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <summary>
            Loads all dead properties for a given <paramref name="entry"/> into <see cref="T:FubarDev.WebDavServer.Props.Dead.IDeadProperty"/> implementations
            </summary>
            <param name="entry">The entry to load the dead properties for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The collection of the loaded dead properties</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.GetETagAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <summary>
            Gets the entity tag for a given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to get the entity tag for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The loaded entity tag</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStore.UpdateETagAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <summary>
            Updates an entity tag for a given <paramref name="entry"/>
            </summary>
            <param name="entry">The entry to get the entity tag for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The updated entity tag</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Store.IPropertyStoreFactory">
            <summary>
            The interface for a property store factory
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.IPropertyStoreFactory.Create(FubarDev.WebDavServer.FileSystem.IFileSystem)">
            <summary>
            Creates/gets a property store for a file system
            </summary>
            <param name="fileSystem">The file system to get/create the property store for</param>
            <returns>The property store for the <paramref name="fileSystem"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Props.Store.PropertyStoreBase">
            <summary>
            Common functionality for a property store implementation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.#ctor(FubarDev.WebDavServer.Props.Dead.IDeadPropertyFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.Props.Store.PropertyStoreBase"/> class.
            </summary>
            <param name="deadPropertyFactory">The factory to create dead properties</param>
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.Cost">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.DeadPropertyFactory">
            <summary>
            Gets the dead property factory
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.GetAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.SetAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XElement,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.RemoveAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.GetAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.SetAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.RemoveAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Collections.Generic.IEnumerable{System.Xml.Linq.XName},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.RemoveAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.Create(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.LoadAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Xml.Linq.XName,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.LoadAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.GetETagAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.UpdateETagAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.GetDeadETagAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> from the property store
            </summary>
            <param name="entry">The entry to get the <c>getetag</c> property from</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The entity tag for the <paramref name="entry"/></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Props.Store.PropertyStoreBase.UpdateDeadETagAsync(FubarDev.WebDavServer.FileSystem.IEntry,System.Threading.CancellationToken)">
            <summary>
            Updates a <see cref="T:FubarDev.WebDavServer.Props.Dead.GetETagProperty"/> in the property store
            </summary>
            <param name="entry">The entry to update the <c>getetag</c> property for</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The updated entity tag for the <paramref name="entry"/></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.RecursiveProcessingMode">
            <summary>
            Defines the mode that should be used to copy or move entries
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.RecursiveProcessingMode.PreferFastest">
            <summary>
            Prefer the fastest method (if possible)
            </summary>
            <remarks>
            This allows entries to be copied or moved within one file system.
            </remarks>
        </member>
        <member name="F:FubarDev.WebDavServer.RecursiveProcessingMode.PreferCrossFileSystem">
            <summary>
            Prefer a slower copy/move operation that allows copying or moving between file systems.
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.RecursiveProcessingMode.PreferCrossServer">
            <summary>
            Prefer using a copy/move operation that allows copying between servers.
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.RecursiveTargetBehaviour">
            <summary>
            Define the behaviour, when a target already exists
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.RecursiveTargetBehaviour.Overwrite">
            <summary>
            Overwrite the existing target entry
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.RecursiveTargetBehaviour.DeleteTarget">
            <summary>
            Delete the existing target entry before copying the contents from the source
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.SystemClock">
            <summary>
            The default implementation of <see cref="T:FubarDev.WebDavServer.ISystemClock"/>
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.SystemClock.UtcNow">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.UriExtensions">
            <summary>
            Extension methods for URLs
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.GetParent(System.Uri)">
            <summary>
            Gets the URL of the containing collection of a collection or document URL
            </summary>
            <param name="url">The URL to get the parent URL for</param>
            <returns>The URL of the containing collection</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.GetCollectionUri(System.Uri)">
            <summary>
            Gets the collection URL.
            </summary>
            <remarks>
            This is different from <see cref="M:FubarDev.WebDavServer.UriExtensions.GetParent(System.Uri)"/>, because this function returns
            the same URL if the <paramref name="url"/> is already an URL to a collection.
            </remarks>
            <param name="url">The URL to get the collection for</param>
            <returns>The collection URL</returns>
            <remarks>
            When the <paramref name="url"/> is already a collection URL, then this URL will be
            returned.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.GetName(System.Uri)">
            <summary>
            Gets the name of the collection or document URL
            </summary>
            <param name="url">The collection or document URL</param>
            <returns>The name of the collection or document URL</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.Append(System.Uri,FubarDev.WebDavServer.FileSystem.IDocument)">
            <summary>
            Appends the name of a document to the <paramref name="baseUri"/>
            </summary>
            <param name="baseUri">The base URL to append the <paramref name="entry"/> name to</param>
            <param name="entry">The <see cref="T:FubarDev.WebDavServer.FileSystem.IDocument"/> whose name to append to the <paramref name="baseUri"/></param>
            <returns>The <paramref name="baseUri"/> with the <paramref name="entry"/> name appended.</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.Append(System.Uri,FubarDev.WebDavServer.FileSystem.ICollection)">
            <summary>
            Appends the name of a collection to the <paramref name="baseUri"/>
            </summary>
            <param name="baseUri">The base URL to append the <paramref name="entry"/> name to</param>
            <param name="entry">The <see cref="T:FubarDev.WebDavServer.FileSystem.ICollection"/> whose name to append to the <paramref name="baseUri"/></param>
            <returns>The <paramref name="baseUri"/> with the <paramref name="entry"/> name appended.</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.Append(System.Uri,FubarDev.WebDavServer.FileSystem.IEntry)">
            <summary>
            Append the name of an <paramref name="entry"/> to the <paramref name="baseUri"/>
            </summary>
            <param name="baseUri">The base URL to append the <paramref name="entry"/> name to</param>
            <param name="entry">The <see cref="T:FubarDev.WebDavServer.FileSystem.IEntry"/> whose name to append to the <paramref name="baseUri"/></param>
            <returns>The <paramref name="baseUri"/> with the <paramref name="entry"/> name appended.</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.AppendDirectory(System.Uri,System.String)">
            <summary>
            Appends a collection name to the <paramref name="baseUri"/>
            </summary>
            <param name="baseUri">The base URL to append the name to</param>
            <param name="collectionName">The collection name to append</param>
            <returns>The <paramref name="baseUri"/> with the appended name.</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.Append(System.Uri,System.Uri)">
            <summary>
            Append a relative URI to the <paramref name="baseUri"/>
            </summary>
            <param name="baseUri">The base URL to append the <paramref name="relativeUri"/> to</param>
            <param name="relativeUri">The relative URL to append to the <paramref name="baseUri"/></param>
            <returns>The <paramref name="baseUri"/> with the appended <paramref name="relativeUri"/>.</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.Append(System.Uri,System.String,System.Boolean)">
            <summary>
            Append a relative URL to the <paramref name="baseUri"/>
            </summary>
            <param name="baseUri">The base URL to append the <paramref name="relative"/> URI to</param>
            <param name="relative">The relative URL to append to the <paramref name="baseUri"/></param>
            <param name="isEscaped">Is the <paramref name="relative"/> URL already escaped?</param>
            <returns>The <paramref name="baseUri"/> with the appended <paramref name="relative"/> URL.</returns>
            <remarks>
            When the <paramref name="relative"/> URL isn't escaped, then it MUST NOT contain a path separator.
            </remarks>
        </member>
        <member name="M:FubarDev.WebDavServer.UriExtensions.UriEscape(System.String)">
            <summary>
            Escapes the string in a WebDAV compatible way
            </summary>
            <param name="s">The string to escape</param>
            <returns>The escaped string</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.DefaultMimeTypeDetector">
            <summary>
            The default implementation of a <see cref="T:FubarDev.WebDavServer.IMimeTypeDetector"/>
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.DefaultMimeTypeDetector.TryDetect(FubarDev.WebDavServer.FileSystem.IEntry,System.String@)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.IdentityExtensions">
            <summary>
            Extension methods for the <see cref="T:System.Security.Principal.IIdentity"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.IdentityExtensions.IsAnonymous(System.Security.Principal.IIdentity)">
            <summary>
            Returns a value that indicates whether the identity is for an anonymous user.
            </summary>
            <param name="identity">The identity to check</param>
            <returns><see langword="true"/> when <paramref name="identity"/> is anonymous</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.MimeTypesMap">
            <summary>
            Mime type map
            </summary>
            <remarks>
            Taken from the project https://github.com/hey-red/MimeTypesMap
            </remarks>
        </member>
        <member name="F:FubarDev.WebDavServer.Utils.MimeTypesMap.DefaultMimeType">
            <summary>
            The default mime type
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Utils.MimeTypesMap.FolderContentType">
            <summary>
            The mime type for a collection
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.MimeTypesMap.TryGetMimeType(System.String,System.String@)">
            <summary>
            Gets the mime type of a document name
            </summary>
            <param name="fileName">The document name to get the mime type for</param>
            <param name="mimeType">The mime type of the <paramref name="fileName"/></param>
            <returns><c>true</c> when the mime type could be detected</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.StreamView">
            <summary>
            This is some kind of a "View" to an underlying stream
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.CanRead">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.CanSeek">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.Length">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.StreamView.Position">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.CreateAsync(System.IO.Stream,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Creates a new stream view
            </summary>
            <remarks>
            The <paramref name="baseStream"/> must be at position 0.
            </remarks>
            <param name="baseStream">The underlying stream</param>
            <param name="position">The start position</param>
            <param name="length">The length of the data to be read from the underlying stream</param>
            <param name="ct">The cancellation token</param>
            <returns>The new stream view</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Flush">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.StreamView.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.SystemInfo">
            <summary>
            System information utility class
            </summary>
        </member>
        <member name="F:FubarDev.WebDavServer.Utils.SystemInfo.UserHomePathClaim">
            <summary>
            The name of the claim for the user home path
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.SystemInfo.GetUserHomePath(System.Security.Principal.IPrincipal,System.String,System.String)">
            <summary>
            Gets the home path of the user
            </summary>
            <param name="principal">The principal to get the home path for</param>
            <param name="homePath">The home path to use</param>
            <param name="anonymousUserName">The user name for the unauthenticated user</param>
            <returns>The home path of the user</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.SystemInfo.GetHomePath">
            <summary>
            Gets the home path information
            </summary>
            <returns>The found home path</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.SystemInfo.HomePathInfo">
            <summary>
            Information about the found home path
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.SystemInfo.HomePathInfo.RootPath">
            <summary>
            Gets or sets the root path for all users
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.SystemInfo.HomePathInfo.IsProbablyUnix">
            <summary>
            Gets or sets a value indicating whether the root path is probably a unix OS
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.Device">
            <summary>
            Represents the physical device the user agent is using
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Device.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a Device instance
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.Device.IsSpider">
            <summary>
            Returns true if the device is likely to be a spider or a bot device
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.Device.Brand">
             <summary>
            The brand of the device 
             </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.Device.Family">
            <summary>
            The family of the device, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.Device.Model">
            <summary>
            The model of the device, if available
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Device.ToString">
            <summary>
            A readable description of the device
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.OS">
            <summary>
            Represents the operating system the user agent runs on
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.OS.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructs an OS instance
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.Family">
            <summary>
            The familiy of the OS
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.Major">
            <summary>
            The major version of the OS, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.Minor">
            <summary>
            The minor version of the OS, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.Patch">
            <summary>
            The patch version of the OS, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.OS.PatchMinor">
            <summary>
            The minor patch version of the OS, if available
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.OS.ToString">
            <summary>
            A readable description of the OS
            </summary>
            <returns></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.UserAgent">
            <summary>
            Represents a user agent, commonly a browser
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.UserAgent.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Construct a UserAgent instance 
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.UserAgent.Family">
            <summary>
            The family of user agent
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.UserAgent.Major">
            <summary>
            Major version of the user agent, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.UserAgent.Minor">
            <summary>
            Minor version of the user agent, if available
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.UserAgent.Patch">
            <summary>
            Patch version of the user agent, if available
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.UserAgent.ToString">
            <summary>
            The user agent as a readbale string
            </summary>
            <returns></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput">
            <summary>
            Representing the parse results. Structure of this class aligns with the 
            ua-parser-output WebIDL structure defined in this document: https://github.com/ua-parser/uap-core/blob/master/docs/specification.md
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput.String">
            <summary>
            The user agent string, the input for the UAParser
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput.OS">
            <summary>
            The OS parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput.Device">
            <summary>
            The Device parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.IUAParserOutput.UA">
            <summary>
            The User Agent parsed from the user agent string
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.ClientInfo">
            <summary>
            Represents the user agent client information resulting from parsing
            a user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.String">
            <summary>
            The user agent string, the input for the UAParser
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.OS">
            <summary>
            The OS parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.Device">
            <summary>
            The Device parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.UserAgent">
            <summary>
            The User Agent parsed from the user agent string
            </summary>
        </member>
        <member name="P:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.UA">
            <summary>
            The User Agent parsed from the user agent string
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.#ctor(System.String,FubarDev.WebDavServer.Utils.UAParser.OS,FubarDev.WebDavServer.Utils.UAParser.Device,FubarDev.WebDavServer.Utils.UAParser.UserAgent)">
            <summary>
            Constructs an instance of the ClientInfo with results of the user agent string parsing 
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.ClientInfo.ToString">
            <summary>
            A readable description of the user agent client information
            </summary>
            <returns></returns>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.Parser">
            <summary>
            Represents a parser of a user agent string
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.FromYaml(System.String)">
            <summary>
            Returns a <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance based on the regex definitions in a yaml string
            </summary>
            <param name="yaml">a string containing yaml definitions of reg-ex</param>
            <returns>A <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance parsing user agent strings based on the regexes defined in the yaml string</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.FromYamlFile(System.String)">
            <summary>
            Returns a <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance based on the information in a yaml file
            </summary>
            <param name="path">the path to a yaml file containing regex definitions</param>
            <returns>A <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance parsing user agent strings based on the regexes defined in the yaml string</returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.GetDefault">
            <summary>
            Returns a <see cref="T:FubarDev.WebDavServer.Utils.UAParser.Parser"/> instance based on the embedded regex definitions. 
            <remarks>The embedded regex definitions may be outdated. Consider passing in external yaml definitions using <see cref="M:FubarDev.WebDavServer.Utils.UAParser.Parser.FromYaml(System.String)"/> or
            <see cref="M:FubarDev.WebDavServer.Utils.UAParser.Parser.FromYamlFile(System.String)"/></remarks>
            </summary>
            <returns></returns>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.Parse(System.String)">
            <summary>
            Parse a user agent string and obtain all client information
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.ParseOS(System.String)">
            <summary>
            Parse a user agent string and obtain the OS information
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.ParseDevice(System.String)">
            <summary>
            Parse a user agent string and obtain the device information
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.Utils.UAParser.Parser.ParseUserAgent(System.String)">
            <summary>
            Parse a user agent string and obtain the UserAgent information
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.Utils.UAParser.MinimalYamlParser">
            <summary>
            Just enough string parsing to recognize the regexes.yaml file format. Introduced to remove
            dependency on large Yaml parsing lib. Note that a unittest ensures compatibility
            by ensuring regexes and properties are read similar to using the full yaml lib
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.WebDavException">
            <summary>
            The WebDAV exception
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavException.#ctor(FubarDev.WebDavServer.Model.WebDavStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.WebDavException"/> class.
            </summary>
            <param name="statusCode">The WebDAV status code</param>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavException.#ctor(FubarDev.WebDavServer.Model.WebDavStatusCode,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.WebDavException"/> class.
            </summary>
            <param name="statusCode">The WebDAV status code</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavException.#ctor(FubarDev.WebDavServer.Model.WebDavStatusCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.WebDavException"/> class.
            </summary>
            <param name="statusCode">The WebDAV status code</param>
            <param name="responseMessage">The reason phrase for the status code</param>
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavException.StatusCode">
            <summary>
            Gets the WebDAV status code
            </summary>
        </member>
        <member name="T:FubarDev.WebDavServer.WebDavRequestHeaders">
            <summary>
            Implementation of the <see cref="T:FubarDev.WebDavServer.IWebDavRequestHeaders"/> interface
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavRequestHeaders.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},FubarDev.WebDavServer.IWebDavContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.WebDavRequestHeaders"/> class.
            </summary>
            <param name="headers">The headers to parse</param>
            <param name="context">The WebDAV request context</param>
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.ContentLength">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.Depth">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.Overwrite">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.If">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.IfMatch">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.IfNoneMatch">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.IfModifiedSince">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.IfUnmodifiedSince">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.Range">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.Timeout">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.Headers">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavRequestHeaders.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.WebDavResult">
            <summary>
            The result of a WebDAV operation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavResult.#ctor(FubarDev.WebDavServer.Model.WebDavStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.WebDavResult"/> class.
            </summary>
            <param name="statusCode">The WebDAV status code</param>
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavResult.StatusCode">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavResult.Headers">
            <summary>
            Gets the header values to be set for the response
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavResult.ExecuteResultAsync(FubarDev.WebDavServer.IWebDavResponse,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavResult.AddHeaderValues(System.Collections.Immutable.IImmutableDictionary{System.String,System.Collections.Generic.IEnumerable{System.String}},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Adds header values to the current header dictionary
            </summary>
            <param name="currentHeaders">The current header dictionary</param>
            <param name="headersToAdd">The headers to add</param>
            <returns>The updated header dictionary</returns>
        </member>
        <member name="T:FubarDev.WebDavServer.WebDavResult`1">
            <summary>
            Gets the WebDAV result with a value to be returned in the response body
            </summary>
            <typeparam name="T">The type of the value to be serialized as response body</typeparam>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavResult`1.#ctor(FubarDev.WebDavServer.Model.WebDavStatusCode,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.WebDavResult`1"/> class.
            </summary>
            <param name="statusCode">The WebDAV status code</param>
            <param name="data">The data to be returned in the response body</param>
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavResult`1.Data">
            <summary>
            Gets the data to be returned in the response body
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavResult`1.ExecuteResultAsync(FubarDev.WebDavServer.IWebDavResponse,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.WebDavServer">
            <summary>
            The default WebDAV server implementation
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavServer.#ctor(FubarDev.WebDavServer.Dispatchers.IWebDavClass1,FubarDev.WebDavServer.Formatters.IWebDavOutputFormatter,FubarDev.WebDavServer.Dispatchers.IWebDavClass2)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.WebDavServer"/> class.
            </summary>
            <param name="webDavClass1">The WebDAV class 1 implementation</param>
            <param name="formatter">The formatter for the WebDAV XML responses</param>
            <param name="webDavClass2">The WebDAV class 2 implementation</param>
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavServer.SupportedClasses">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavServer.Formatter">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavServer.Class1">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.WebDavServer.WebDavServer.Class2">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.WebDavServer.WebDavXmlResult">
            <summary>
            A WebDAV result returning an <see cref="T:System.Xml.Linq.XElement"/> in the response body
            </summary>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavXmlResult.#ctor(FubarDev.WebDavServer.Model.WebDavStatusCode,System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.WebDavServer.WebDavXmlResult"/> class.
            </summary>
            <param name="statusCode">The WebDAV status code</param>
            <param name="element">The element to be serialized as the response body</param>
        </member>
        <member name="M:FubarDev.WebDavServer.WebDavXmlResult.ExecuteResultAsync(FubarDev.WebDavServer.IWebDavResponse,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:System.Collections.Generic.MultiValueDictionary`2">
            <summary>
            A MultiValueDictionary can be viewed as a <see cref="T:System.Collections.IDictionary" /> that allows multiple 
            values for any given unique key. While the MultiValueDictionary API is 
            mostly the same as that of a regular <see cref="T:System.Collections.IDictionary" />, there is a distinction
            in that getting the value for a key returns a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> of values
            rather than a single value associated with that key. Additionally, 
            there is functionality to allow adding or removing more than a single
            value at once. 
            
            The MultiValueDictionary can also be viewed as a IReadOnlyDictionary&lt;TKey,IReadOnlyCollection&lt;TValue&gt;t&gt;
            where the <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> is abstracted from the view of the programmer.
            
            For a read-only MultiValueDictionary, see <see cref="T:System.Linq.ILookup`2" />.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:System.Collections.Generic.MultiValueDictionary`2.dictionary">
            <summary>
            The private dictionary that this class effectively wraps around
            </summary>
        </member>
        <member name="F:System.Collections.Generic.MultiValueDictionary`2.NewCollectionFactory">
            <summary>
            The function to construct a new <see cref="T:System.Collections.Generic.ICollection`1"/>
            </summary>
            <returns></returns>
        </member>
        <member name="F:System.Collections.Generic.MultiValueDictionary`2.version">
            <summary>
            The current version of this MultiValueDictionary used to determine MultiValueDictionary modification
            during enumeration
            </summary>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that is 
            empty, has the specified initial capacity, and uses the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>
            for <typeparamref name="TKey"/>.
            </summary>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <exception cref="T:System.ArgumentOutOfRangeException">capacity must be >= 0</exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class 
            that is empty, has the default initial capacity, and uses the 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class 
            that is empty, has the specified initial capacity, and uses the 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt; and uses the 
            default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            </summary>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt; and uses the 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Int32)">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the specified initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the specified
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the specified initial capacity, and uses the specified
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt;
            and uses the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            The internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt;
            and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            The internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="TValueCollection"/> must not have
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Func{``0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Int32,System.Func{``0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the specified initial capacity, and uses the default
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEqualityComparer{`0},System.Func{``0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the default initial capacity, and uses the specified
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Int32,System.Collections.Generic.IEqualityComparer{`0},System.Func{``0})">
            <summary>
            Creates a new new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> 
            class that is empty, has the specified initial capacity, and uses the specified
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for <typeparamref name="TKey"/>. The 
            internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="capacity">Initial number of keys that the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> will allocate space for</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Capacity must be >= 0</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}},System.Func{``0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt;
            and uses the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            The internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Create``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IReadOnlyCollection{`1}}},System.Collections.Generic.IEqualityComparer{`0},System.Func{``0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> class that contains 
            elements copied from the specified IEnumerable&lt;KeyValuePair&lt;TKey, IReadOnlyCollection&lt;TValue&gt;&gt;&gt;
            and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> for the <typeparamref name="TKey"/> type.
            The internal dictionary will use instances of the <typeparamref name="TValueCollection"/>
            class as its collection type.
            </summary>
            <typeparam name="TValueCollection">
            The collection type that this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />
            will contain in its internal dictionary.
            </typeparam>
            <param name="enumerable">IEnumerable to copy elements into this from</param>
            <param name="comparer">Specified comparer to use for the <typeparamref name="TKey"/>s</param>
            <param name="collectionFactory">A function to create a new <see cref="T:System.Collections.Generic.ICollection`1"/> to use
            in the internal dictionary store of this <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.</param> 
            <returns>A new <see cref="T:System.Collections.Generic.MultiValueDictionary`2" /> with the specified
            parameters.</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="collectionFactory"/> must create collections with
            IsReadOnly set to true by default.</exception>
            <exception cref="T:System.ArgumentNullException">enumerable must be non-null</exception>
            <remarks>If <paramref name="comparer"/> is set to null, then the default <see cref="T:System.Collections.IEqualityComparer" /> for <typeparamref name="TKey"/> is used.</remarks>
            <remarks>
            Note that <typeparamref name="TValueCollection"/> must implement <see cref="T:System.Collections.Generic.ICollection`1"/>
            in addition to being constructable through new(). The collection returned from the constructor
            must also not have IsReadOnly set to True by default.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified <typeparamref name="TKey"/> and <typeparamref name="TValue"/> to the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the element to add.</param>
            <param name="value">The <typeparamref name="TValue"/> of the element to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <c>null</c>.</exception>
            <remarks>
            Unlike the Add for <see cref="T:System.Collections.IDictionary" />, the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> Add will not
            throw any exceptions. If the given <typeparamref name="TKey"/> is already in the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>,
            then <typeparamref name="TValue"/> will be added to <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> associated with <paramref name="key"/>
            </remarks>
            <remarks>
            A call to this Add method will always invalidate any currently running enumeration regardless
            of whether the Add method actually modified the <see cref="T:System.Collections.Generic.MultiValueDictionary`2" />.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Adds a number of key-value pairs to this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>, where
            the key for each value is <paramref name="key"/>, and the value for a pair
            is an element from <paramref name="values"/>
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of all entries to add</param>
            <param name="values">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of values to add</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> and <paramref name="values"/> must be non-null</exception>
            <remarks>
            A call to this AddRange method will always invalidate any currently running enumeration regardless
            of whether the AddRange method actually modified the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Remove(`0)">
            <summary>
            Removes every <typeparamref name="TValue"/> associated with the given <typeparamref name="TKey"/>
            from the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the elements to remove</param>
            <returns><c>true</c> if the removal was successful; otherwise <c>false</c></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <c>null</c>.</exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Remove(`0,`1)">
            <summary>
            Removes the first instance (if any) of the given <typeparamref name="TKey"/>-<typeparamref name="TValue"/> 
            pair from this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>. 
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the element to remove</param>
            <param name="value">The <typeparamref name="TValue"/> of the element to remove</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
            <returns><c>true</c> if the removal was successful; otherwise <c>false</c></returns>
            <remarks>
            If the <typeparamref name="TValue"/> being removed is the last one associated with its <typeparamref name="TKey"/>, then that 
            <typeparamref name="TKey"/> will be removed from the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> and its 
            associated <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> will be freed as if a call to <see cref="M:System.Collections.Generic.MultiValueDictionary`2.Remove(`0)"/>
            had been made.
            </remarks>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Contains(`0,`1)">
            <summary>
            Determines if the given <typeparamref name="TKey"/>-<typeparamref name="TValue"/> 
            pair exists within this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the element.</param>
            <param name="value">The <typeparamref name="TValue"/> of the element.</param>
            <returns><c>true</c> if found; otherwise <c>false</c></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.ContainsValue(`1)">
            <summary>
            Determines if the given <typeparamref name="TValue"/> exists within this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <param name="value">A <typeparamref name="TValue"/> to search the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> for</param>
            <returns><c>true</c> if the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> contains the <paramref name="value"/>; otherwise <c>false</c></returns>      
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Clear">
            <summary>
            Removes every <typeparamref name="TKey"/> and <typeparamref name="TValue"/> from this 
            <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.ContainsKey(`0)">
            <summary>
            Determines if the given <typeparamref name="TKey"/> exists within this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> and has
            at least one <typeparamref name="TValue"/> associated with it.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> to search the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> for</param>
            <returns><c>true</c> if the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> contains the requested <typeparamref name="TKey"/>;
            otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
        </member>
        <member name="P:System.Collections.Generic.MultiValueDictionary`2.Keys">
            <summary>
            Gets each <typeparamref name="TKey"/> in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> that
            has one or more associated <typeparamref name="TValue"/>.
            </summary>
            <value>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing each <typeparamref name="TKey"/> 
            in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> that has one or more associated 
            <typeparamref name="TValue"/>.
            </value>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.TryGetValue(`0,System.Collections.Generic.IReadOnlyCollection{`1}@)">
            <summary>
            Attempts to get the <typeparamref name="TValue"/> associated with the given
            <typeparamref name="TKey"/> and place it into <paramref name="value"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the element to retrieve</param>
            <param name="value">
            When this method returns, contains the <typeparamref name="TValue"/> associated with the specified
            <typeparamref name="TKey"/> if it is found; otherwise contains the default value of <typeparamref name="TValue"/>.
            </param>
            <returns>
            <c>true</c> if the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> contains an element with the specified 
            <typeparamref name="TKey"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
        </member>
        <member name="P:System.Collections.Generic.MultiValueDictionary`2.Values">
            <summary>
            Gets an enumerable of <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> from this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>,
            where each <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> is the collection of every <typeparamref name="TValue"/> associated
            with a <typeparamref name="TKey"/> present in the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>. 
            </summary>
            <value>An IEnumerable of each <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> in this 
            <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/></value>
        </member>
        <member name="P:System.Collections.Generic.MultiValueDictionary`2.Item(`0)">
            <summary>
            Get every <typeparamref name="TValue"/> associated with the given <typeparamref name="TKey"/>. If 
            <paramref name="key"/> is not found in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>, will 
            throw a <see cref="T:System.Collections.Generic.KeyNotFoundException"/>.
            </summary>
            <param name="key">The <typeparamref name="TKey"/> of the elements to retrieve.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> must be non-null</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"><paramref name="key"/> does not have any associated 
            <typeparamref name="TValue"/>s in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.</exception>
            <value>
            An <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> containing every <typeparamref name="TValue"/>
            associated with <paramref name="key"/>.
            </value>
            <remarks>
            Note that the <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> returned will change alongside any changes 
            to the <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/> 
            </remarks>
        </member>
        <member name="P:System.Collections.Generic.MultiValueDictionary`2.Count">
            <summary>
            Returns the number of <typeparamref name="TKey"/>s with one or more associated <typeparamref name="TValue"/>
            in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <value>The number of <typeparamref name="TKey"/>s in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.</value>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.GetEnumerator">
            <summary>
            Get an Enumerator over the <typeparamref name="TKey"/>-<see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/>
            pairs in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.
            </summary>
            <returns>an Enumerator over the <typeparamref name="TKey"/>-<see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/>
            pairs in this <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>.</returns>
        </member>
        <member name="T:System.Collections.Generic.MultiValueDictionary`2.Enumerator">
            <summary>
            The Enumerator class for a <see cref="T:System.Collections.Generic.MultiValueDictionary`2"/>
            that iterates over <typeparamref name="TKey"/>-<see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/>
            pairs.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Enumerator.#ctor(System.Collections.Generic.MultiValueDictionary{`0,`1})">
            <summary>
            Constructor for the enumerator
            </summary>
            <param name="multiValueDictionary">A MultiValueDictionary to iterate over</param>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Enumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:System.Collections.Generic.MultiValueDictionary`2.Enumerator.Dispose">
            <summary>
            Frees resources associated with this Enumerator
            </summary>
        </member>
        <member name="T:System.Collections.Generic.MultiValueDictionary`2.InnerCollectionView">
            <summary>
            An inner class that functions as a view of an ICollection within a MultiValueDictionary
            </summary>
        </member>
    </members>
</doc>
